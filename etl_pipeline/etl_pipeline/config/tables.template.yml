# Tables Configuration Template
# This file shows the structure for the simplified tables.yml configuration
# Generated by analyze_opendental_schema.py

# Configuration for all OpenDental source tables
tables:
  # Example: Patient table configuration
  patient:
    # Core ETL configuration
    incremental_column: DateTimeDeceased
    batch_size: 3000
    extraction_strategy: incremental
    is_modeled: true
    table_importance: critical
    estimated_size_mb: 25
    estimated_rows: 50000
    dependencies: ['clinic', 'provider']
    
    # Column overrides for special handling (optional)
    column_overrides:
      Premed: {conversion_rule: tinyint_to_boolean}
      TxtMsgOk: {conversion_rule: tinyint_to_boolean}
      EstBalance: {conversion_rule: decimal_round, precision: 2}
    
    # Monitoring configuration (optional)
    monitoring:
      alert_on_failure: true
      max_extraction_time_minutes: 30
      data_quality_threshold: 0.99
  
  # Example: Appointment table configuration
  appointment:
    incremental_column: AptDateTime
    batch_size: 2000
    extraction_strategy: incremental
    is_modeled: true
    table_importance: important
    estimated_size_mb: 15
    estimated_rows: 25000
    dependencies: ['patient', 'provider']
    
    # No column overrides needed for this table
    # No custom monitoring needed (uses defaults)
  
  # Example: Procedure table configuration
  procedurelog:
    incremental_column: ProcDate
    batch_size: 1500
    extraction_strategy: incremental
    is_modeled: true
    table_importance: important
    estimated_size_mb: 20
    estimated_rows: 35000
    dependencies: ['patient', 'provider', 'procedurecode']
    
    column_overrides:
      ProcStatus: {conversion_rule: varchar_trim}
      ProcNote: {conversion_rule: text_clean}
    
    monitoring:
      alert_on_failure: true
      max_extraction_time_minutes: 25
      data_quality_threshold: 0.98
  
  # Example: Reference table configuration
  procedurecode:
    incremental_column: DateTStamp
    batch_size: 5000
    extraction_strategy: full_table  # Reference tables often use full loads
    is_modeled: false  # Reference tables typically not modeled in dbt
    table_importance: reference
    estimated_size_mb: 2
    estimated_rows: 500
    dependencies: []
    
    # No column overrides needed
    # Uses default monitoring settings
  
  # Example: Audit table configuration
  securitylog:
    incremental_column: DateTStamp
    batch_size: 1000
    extraction_strategy: incremental
    is_modeled: false  # Audit tables typically not modeled
    table_importance: audit
    estimated_size_mb: 50
    estimated_rows: 100000
    dependencies: ['userod']
    
    # No column overrides needed
    monitoring:
      alert_on_failure: false  # Audit tables less critical
      max_extraction_time_minutes: 60
      data_quality_threshold: 0.90

# Configuration Notes:
# ===================
#
# incremental_column: Column used for incremental loading (timestamp/date column)
# batch_size: Number of rows to process in each batch (1000-5000 recommended)
# extraction_strategy: 'incremental' or 'full_table'
# is_modeled: Whether this table is used in dbt staging models
# table_importance: 'critical', 'important', 'reference', 'audit', or 'standard'
# estimated_size_mb: Approximate table size in megabytes
# estimated_rows: Approximate number of rows in table
# dependencies: List of tables this table depends on (foreign key references)
#
# column_overrides: (optional)
#   - conversion_rule: Special data type conversion rules
#   - precision: For decimal columns
#   - validation: Data validation rules
#
# monitoring: (optional)
#   - alert_on_failure: Whether to send alerts on ETL failures
#   - max_extraction_time_minutes: Maximum allowed extraction time
#   - data_quality_threshold: Minimum data quality score (0.0-1.0)
#
# Conversion Rules:
# =================
# - tinyint_to_boolean: Convert TINYINT(1) to boolean
# - decimal_round: Round decimal values to specified precision
# - varchar_trim: Trim whitespace from VARCHAR columns
# - text_clean: Clean and normalize text content
# - datetime_to_timestamp: Convert MySQL datetime to PostgreSQL timestamp
# - null_to_default: Replace NULL values with defaults
#
# Table Importance Levels:
# =======================
# - critical: Core business tables, highest priority monitoring
# - important: Business tables, high priority monitoring
# - reference: Lookup tables, standard monitoring
# - audit: Audit/logging tables, minimal monitoring
# - standard: Other tables, default monitoring 