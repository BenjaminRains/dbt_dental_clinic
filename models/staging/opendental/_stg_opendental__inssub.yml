version: 2

models:
  - name: stg_opendental__inssub
    description: Staging model for insurance subscribers. This table contains information about insurance subscribers and their relationship to insurance plans.
    
    columns:
      - name: inssub_id
        description: Primary key - Unique identifier for the insurance subscriber record
        tests:
          - unique
          - not_null
          - test_column_greater_than:
              value: 0

      - name: insurance_plan_id
        description: Foreign key to stg_opendental__insplan. Links to the insurance plan details.
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__insplan')
              field: insurance_plan_id
          - test_column_greater_than:
              value: 0

      - name: subscriber_id
        description: Foreign key to the subscriber (patient) record
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__patient')
              field: patient_id
          - test_column_greater_than:
              value: 0

      - name: user_entry_id
        description: Foreign key - ID of the user who created the record
        tests:
          - relationships:
              to: ref('stg_opendental__user')
              field: user_id
          - test_column_greater_than:
              value: 0

      - name: effective_date
        description: Date when the insurance subscription becomes effective
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "effective_date >= '2000-01-01'"
          - test_date_not_future:
              years_ahead: 1
              allow_null: false

      - name: termination_date
        description: Date when the insurance subscription terminates
        tests:
          - test_date_after:
              compare_column: effective_date
              allow_null: true
          - test_date_not_future:
              years_ahead: 5
              allow_null: true

      - name: is_release_info
        description: Flag indicating if information release is authorized
        tests:
          - not_null
          - accepted_values:
              values: [true, false]

      - name: is_assign_benefits
        description: Flag indicating if benefits assignment is authorized
        tests:
          - not_null
          - accepted_values:
              values: [true, false]

      - name: subscriber_external_id
        description: External identifier for the subscriber (often used for insurance claims)
        tests:
          - test_string_not_empty:
              allow_null: true

      - name: benefit_notes
        description: Notes regarding the benefits
        tests:
          - test_string_length:
              max_length: 1000
              allow_null: true

      - name: subscriber_notes
        description: Notes about the subscriber
        tests:
          - test_string_length:
              max_length: 1000
              allow_null: true

      - name: entry_date
        description: Date when the record was created
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "entry_date >= '2000-01-01'"
          - dbt_utils.expression_is_true:
              expression: "entry_date <= current_date"

      - name: last_modified_at
        description: Timestamp of the last modification to the record
        tests:
          - not_null
          - test_date_after:
              compare_column: entry_date
              allow_null: false
          - test_timestamp_not_future:
              allow_null: false

      - name: subscriber_status
        description: Current status of the subscriber (ACTIVE, TERMINATED, or FUTURE_TERMINATED)
        tests:
          - not_null
          - accepted_values:
              values: ['ACTIVE', 'TERMINATED', 'FUTURE_TERMINATED']
          - test_status_with_date:
              date_column: termination_date
              status_value: ACTIVE
              date_condition: termination_date is null
          - test_status_with_date:
              date_column: termination_date
              status_value: TERMINATED
              date_condition: termination_date < current_date
          - test_status_with_date:
              date_column: termination_date
              status_value: FUTURE_TERMINATED
              date_condition: termination_date >= current_date

      - name: _loaded_at
        description: Timestamp when the data was loaded into the data warehouse by the ETL pipeline
        tests:
          - not_null
          - test_date_after:
              compare_column: _created_at
              allow_null: false
          - test_timestamp_not_future:
              allow_null: false

      - name: _created_at
        description: Timestamp when the record was created in the source system (OpenDental)
        tests:
          - not_null
          - test_date_after:
              compare_column: entry_date
              allow_null: false
          - dbt_utils.expression_is_true:
              expression: "_created_at <= current_timestamp"

      - name: _updated_at
        description: Timestamp when the record was last updated in the source system (OpenDental)
        tests:
          - not_null
          - test_date_after:
              compare_column: _created_at
              allow_null: false
          - dbt_utils.expression_is_true:
              expression: "_updated_at <= current_timestamp"

    tests:
      - dbt_utils.relationships_where:
          column_name: inssub_id
          to: ref('stg_opendental__insverify')
          field: foreign_key_id
          from_condition: >
            inssub_id is not null 
            and effective_date is not null 
            and effective_date >= '2020-01-01'
            and effective_date <= current_date
            and (termination_date is null or termination_date >= current_date)
            and insurance_plan_id not in (
              select insurance_plan_id 
              from public_staging.stg_opendental__insplan 
              where hide_from_verify_list = true
            )
            and (
              -- For January records (new year insurance changes)
              (DATE_PART('month', effective_date) = 1 
               and effective_date <= current_date
               and effective_date >= current_date - interval '90 days'
               and effective_date <= current_date - interval '7 days'
               and insurance_plan_id in (
                 select insurance_plan_id
                 from public_staging.stg_opendental__inssub
                 group by insurance_plan_id
                 having COUNT(*) FILTER (WHERE DATE_PART('month', effective_date) = 1) / COUNT(*) >= 0.8
               ))
              or
              -- For non-January records (standard verification)
              (DATE_PART('month', effective_date) != 1 
               and effective_date <= current_date
               and effective_date >= current_date - interval '45 days'
               and insurance_plan_id in (
                 select insurance_plan_id
                 from public_staging.stg_opendental__inssub
                 group by insurance_plan_id
                 having COUNT(*) FILTER (WHERE DATE_PART('month', effective_date) = 1) / COUNT(*) < 0.8
               ))
            )
          to_condition: "verify_type = 1"

      - dbt_utils.relationships_where:
          column_name: inssub_id
          to: ref('stg_opendental__insverifyhist')
          field: foreign_key_id
          from_condition: >
            inssub_id is not null 
            and effective_date is not null 
            and effective_date >= '2020-01-01'
            and effective_date <= current_date
            and (termination_date is null or termination_date >= current_date)
            and insurance_plan_id not in (
              select insurance_plan_id 
              from public_staging.stg_opendental__insplan 
              where hide_from_verify_list = true
            )
            and (
              -- For January records (new year insurance changes)
              (DATE_PART('month', effective_date) = 1 
               and effective_date <= current_date
               and effective_date >= current_date - interval '90 days'
               and effective_date <= current_date - interval '7 days'
               and insurance_plan_id in (
                 select insurance_plan_id
                 from public_staging.stg_opendental__inssub
                 group by insurance_plan_id
                 having COUNT(*) FILTER (WHERE DATE_PART('month', effective_date) = 1) / COUNT(*) >= 0.8
               ))
              or
              -- For non-January records (standard verification)
              (DATE_PART('month', effective_date) != 1 
               and effective_date <= current_date
               and effective_date >= current_date - interval '45 days'
               and insurance_plan_id in (
                 select insurance_plan_id
                 from public_staging.stg_opendental__inssub
                 group by insurance_plan_id
                 having COUNT(*) FILTER (WHERE DATE_PART('month', effective_date) = 1) / COUNT(*) < 0.8
               ))
            )
          to_condition: "verify_type = 1"

    config:
      tags: ['staging', 'insurance', 'daily']
