version: 2

models:
  - name: stg_opendental__adjustment
    description: >
      Staged adjustment data from OpenDental system following refined naming conventions.
      This staging model focuses on basic data type conversions and standardization, 
      with complex business logic moved to the intermediate layer (int_adjustments).
      
      Refactoring Changes:
      - Applied transform_id_columns() macro for all ID field conversions
      - Used clean_opendental_date() macro for proper date handling
      - Used standardize_metadata_columns() macro for consistent metadata
      - Converted CTEs to snake_case following dbt best practices
      - Removed complex business logic (moved to int_adjustments)
      - Kept only essential staging transformations
      
      Key characteristics:
      - procedure_id = 0 represents general account adjustments not tied to specific procedures
      - These general adjustments affect the overall patient balance
      - Both procedure-specific and general adjustments are included
      - General adjustments (procedure_id = 0) are valid and important for AR analysis
      - Filtered to include data from 2023-01-01 onwards with incremental updates

    columns:
      - name: adjustment_id
        description: Primary key, unique identifier for each adjustment record (transformed from AdjNum)
        tests:
          - unique
          - not_null

      - name: patient_id
        description: Foreign key to the patient table (transformed from PatNum)
        tests:
          - not_null

      - name: procedure_id
        description: >
          Foreign key to the procedure table (transformed from ProcNum, with NULLIF for 0 values).
          - NULL values indicate general account adjustments not tied to any procedure
          - Non-null values link to specific procedures
          - General adjustments affect the overall patient balance
          - Both types are valid and important for AR analysis

      - name: provider_id
        description: Foreign key to the provider table who authorized the adjustment (transformed from ProvNum, with NULLIF for 0 values)

      - name: clinic_id
        description: Foreign key to the clinic table where adjustment was made (transformed from ClinicNum, with NULLIF for 0 values)

      - name: statement_id
        description: Foreign key to billing statement (transformed from StatementNum, with NULLIF for 0 values)

      - name: adjustment_type_id
        description: Foreign key to definition table for adjustment type (transformed from AdjType)
        tests:
          - not_null

      - name: tax_transaction_id
        description: Foreign key to tax transaction (transformed from TaxTransID, with NULLIF for 0 values)

      - name: adjustment_amount
        description: The monetary value of the adjustment (positive for credits, negative for debits)
        tests:
          - not_null

      - name: adjustment_note
        description: Freetext note describing the adjustment (nullified if empty string)

      - name: adjustment_date
        description: Date when the adjustment was applied (cleaned using date macro)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              column_name: adjustment_date
              min_value: "'2023-01-01'::date"
              max_value: current_date

      - name: procedure_date
        description: Date of the associated procedure (cleaned using date macro)

      - name: entry_date
        description: Date when the adjustment was entered into the system (cleaned using date macro)

      - name: adjustment_direction
        description: >
          Basic categorization of adjustment amount direction.
          Values: 'positive', 'negative', 'zero'
        tests:
          - accepted_values:
              values: ['positive', 'negative', 'zero']

      - name: is_procedure_adjustment
        description: >
          Boolean flag indicating if adjustment is linked to a specific procedure.
          - true = linked to a specific procedure (procedure_id > 0)
          - false = general account adjustment (procedure_id = 0 or NULL)
        tests:
          - accepted_values:
              values: [true, false]
          - not_null

      - name: is_retroactive_adjustment
        description: Boolean flag indicating if adjustment date differs from procedure date
        tests:
          - accepted_values:
              values: [true, false]
          - not_null

      # Required metadata columns (using standardize_metadata_columns macro)
      - name: _loaded_at
        description: Timestamp when the data was loaded into the data warehouse by the ETL pipeline
        tests:
          - not_null
      
      - name: _created_at
        description: Timestamp when the record was created in OpenDental (from DateEntry)
        tests:
          - not_null
      
      - name: _updated_at
        description: Timestamp when the record was last updated in OpenDental (from SecDateTEdit)
        tests:
          - not_null

      - name: _created_by_user_id
        description: User ID who created the record in OpenDental (from SecUserNumEntry)

    tests:
      - dbt_expectations.expect_table_row_count_to_be_between:
          min_value: 1
          max_value: 1000000  # Adjust based on expected volume
      
      - dbt_utils.expression_is_true:
          expression: >
            (procedure_id IS NULL AND is_procedure_adjustment = false) OR
            (procedure_id IS NOT NULL AND is_procedure_adjustment = true)
          config:
            severity: error
            description: "procedure_id and is_procedure_adjustment must be consistent"