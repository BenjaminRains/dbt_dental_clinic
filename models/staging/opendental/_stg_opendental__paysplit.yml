version: 2

models:
  - name: stg_opendental__paysplit
    description: >
      Staging model for OpenDental payment splits. Payment splits represent individual allocations
      of payments to specific procedures, adjustments, or payment plans. This model includes
      data from 2023-01-01 onwards and is incrementally loaded.

      Purpose:
      - Allocate income to clinics, production, providers, or unearned income types
      - Track payment allocations to procedures, adjustments, or payment plans
      - Support prepayment and unearned income tracking
      - Enable hidden splits for prepayments and treatment planning
      
      Split Types:
      - Regular splits: Visible on account, attached to completed procedures/adjustments
      - Hidden splits: Not shown on account, used for prepayments and treatment planning
      - Unearned splits: Track prepayments and deferred income
      
      Split Patterns:
      - Most payments have 1-2 splits (median = 2)
      - Some administrative entries (payment_type_id = 0) can have hundreds of splits
      - High-split patterns (100+ splits) are typically:
        * Administrative/batch operations
        * Treatment plan allocations
        * System-generated entries
        * Characterized by payment_amount = 0.0
        * Recent dates (typically within current month)
      
      Common Split Amounts:
      - Most frequent: $31.00, $60.00, $109.00
      - Common refund amounts: -$29.00, -$53.00, -$30.00
      - Small amounts (<$10) often represent adjustments or fees
      
      Discount Tracking:
      - Discounts are primarily tracked through two mechanisms:
        1. Procedure-level discounts:
           * Stored in procedurelog.Discount
           * Typically used for higher-value procedures (avg $1,110)
           * Often accompanied by adjustments (avg -$554)
        2. Adjustment-level discounts:
           * Stored in adjustment.AdjType and AdjAmt
           * Used for highest-value procedures (avg $2,945)
           * Common adjustment types:
             - 186: Senior discount
             - 472, 474, 475: Provider discounts
             - 486: Family discount
             - 9: Cash discount
      - Note: The paysplit.IsDiscount and DiscountType fields are currently unused
        and should not be relied upon for discount tracking
      
      Business Rules:
      - Each split must be allocated to either a procedure, adjustment, or payment plan
      - Zero amount splits must be valid (discounts, unearned revenue)
      - Unearned revenue splits must have a provider
      - Split amounts must be within reasonable ranges
      - High-split administrative entries require special validation
      - Payment type 0 entries need additional verification
      - Clinic and Provider inherit from attached procedures/adjustments
      - Rigorous validation when attached to procedures
      - Prevents overpayment with warnings
      
      Hidden Split Rules:
      - Must have an Unearned Type flagged as "Do Not Show on Account"
      - Typically used for payment plan prepayments or treatment planned procedures
      - Tracked separately in Account Module
      - Automatically transfer to visible splits when procedures complete
      - Generate income transfers when moved between hidden/visible status
    
    tests:
      # Comment out this test until we can fix the custom macro
      # - paysplit_validation_rules
      
      # Test: Each split must be allocated to either a procedure, adjustment, or payment plan
      - dbt_utils.expression_is_true:
          expression: "procedure_id IS NOT NULL OR adjustment_id IS NOT NULL OR payplan_charge_id IS NOT NULL"
      
      # Test: Split amount should not be zero unless it's marked as a discount, has unearned_type=288, or has a procedure_id
      - dbt_utils.expression_is_true:
          expression: >
            NOT (
              split_amount = 0 
              AND is_discount_flag = false
              AND unearned_type != 288
              AND procedure_id = 0
            )
      
      # Test: Unearned splits (types 288, 439) must have a provider assigned
      - dbt_utils.expression_is_true:
          expression: "NOT (unearned_type IN (288, 439) AND provider_id IS NULL)"

      # Simple test for forward_split_id
      - dbt_utils.expression_is_true:
          expression: "forward_split_id = 0"
          config:
            severity: warn
            description: "Field is currently unused, 0 is the expected value"

    columns:
      - name: paysplit_id
        description: Unique identifier for each payment split record
        tests:
          - unique
          - not_null

      # Relationship columns
      - name: payment_id
        description: |
          Foreign key to the parent payment record.
          Note: Some administrative payments (type 0) can have hundreds of splits.
        tests:
          - not_null

      - name: patient_id
        description: Foreign key to the patient associated with this payment split
        tests:
          - not_null

      - name: clinic_id
        description: Foreign key to the clinic where the payment split was recorded

      - name: provider_id
        description: Foreign key to the provider associated with this payment split

      - name: procedure_id
        description: Foreign key to the dental procedure this split is applied to

      - name: adjustment_id
        description: Foreign key to any related adjustment record

      - name: payplan_id
        description: Foreign key to the associated payment plan, if applicable

      - name: payplan_charge_id
        description: Foreign key to the specific payment plan charge

      - name: forward_split_id
        description: |
          Legacy field for tracking payment split references. Currently unused in the system.
          
          Current State:
          - Always set to 0 in the source system
          - Maintained for backward compatibility
          - Index exists but is not actively used
          
          Historical Context:
          - Originally named "FSplitNum" in source system
          - Was potentially used for payment plan or prepayment tracking
          - Field and index remain in place for backward compatibility
          
          Business Rules:
          - Expected value is 0 for all records
          - No active validation required
          - No impact on current payment processing
        tests:
          - dbt_utils.expression_is_true:
              expression: "= 0"
              column_name: "forward_split_id"
              config:
                severity: warn
                description: "Field is currently unused, 0 is the expected value"

      - name: created_by_user_id
        description: ID of the user who created this payment split record

      # Split details
      - name: split_amount
        description: |
          The monetary amount of this payment split.
          Common patterns:
          - Most frequent: $31.00, $60.00, $109.00
          - Common refunds: -$29.00, -$53.00, -$30.00
          - Small amounts (<$10) often represent adjustments
        tests:
          - not_null

      - name: payment_date
        description: Date when the payment was made
        tests:
          - not_null

      - name: procedure_date
        description: Date of the associated procedure, if applicable

      # Flags and types
      - name: is_discount_flag
        description: |
          Boolean flag indicating if this split represents a discount.
          
          Note: This field is currently unused in the source system (always 0).
          Discounts are primarily tracked through:
          1. procedurelog.Discount for procedure-level discounts
          2. adjustment.AdjType and AdjAmt for adjustment-level discounts
          
          Common adjustment types for discounts:
          - 186: Senior discount
          - 472, 474, 475: Provider discounts
          - 486: Family discount
          - 9: Cash discount
        tests:
          - not_null

      - name: discount_type
        description: |
          Type of discount if this split represents a discount.
          
          Note: This field is currently unused in the source system (always 0).
          For actual discount types, refer to:
          1. procedurelog.Discount for procedure-level discounts
          2. adjustment.AdjType for adjustment-level discounts
          
          Common adjustment types for discounts:
          - 186: Senior discount
          - 472, 474, 475: Provider discounts
          - 486: Family discount
          - 9: Cash discount

      - name: unearned_type
        description: >
          Classification for unearned payment types. Critical for income transfer tracking.
          
          Category 29 Unearned Types:
          
          1. Type 0 (Default/Incoming):
             * Used for incoming/receiving transfers
             * Must have positive amounts
             * Default unearned type for unallocated paysplits
             * Represents base prepayment/unearned income
          
          2. Type 288 (Prepayment/Outgoing):
             * Used for outgoing/sending transfers
             * Must have negative amounts
             * Explicitly defined as "Prepayment"
             * Used to track money being moved out
          
          3. Type 439 (Treatment Plan):
             * Specific to treatment plan prepayments
             * Has special handling (item_value = 'X')
             * Used for treatment planned procedures
             * Tracks prepayments before procedure completion
          
          4. Type 598 (Payment Plan):
             * Specific to payment plan prepayments
             * Has special handling (item_value = 'X')
             * Used for recurring payment tracking
             * Links prepayments to payment plans
          
          5. Type 641 (Refund):
             * Hidden type for refund tracking
             * Used internally by the system
             * Not visible in standard reports
          
          Transfer Rules:
          - Regular transfers use 0/288 pair
          - Treatment plan prepayments use 439
          - Payment plan prepayments use 598
          - Refunds tracked with 641
          - All types require provider assignment
          
          Validation:
          - Type 0: Must be positive amounts
          - Type 288: Must be negative amounts
          - Types 439/598: Must have procedure/plan links
          - All types: Provider assignment required
          - Hidden types: Not shown in standard reports

      - name: payplan_debit_type
        description: Type of debit if associated with a payment plan

      # Metadata columns
      - name: entry_date
        description: Date when this split record was entered into the system

      - name: updated_at
        description: Timestamp of the last update to this record

      - name: _loaded_at
        description: Timestamp when this record was loaded into the warehouse

    meta:
      contains_pii: true
      owner: "mdc analytics team"
      validation_rules:
        - "Required Fields: All key fields (payment_id, split_amount, payment_date) must be populated"
        - "Reference Rules: Must have either procedure_id, adjustment_id, or payplan_charge_id"
        - "Amount Rules: Split amount should not be 0 unless (1) marked as discount, (2) unearned_type=288, or (3) has a valid procedure_id"
        - "Patient Match: Patient ID should match the parent payment's patient"
        - "Unearned Types: Special handling for types 288 and 439"
        - "Provider Assignment: Required for unearned income types"
        - "Amount Thresholds: Monitoring for statistical outliers in split amounts"
        - "Split Count Patterns: Monitoring for high-split administrative entries (100+ splits)"
        - "Payment Type Patterns: Special handling for payment_type_id = 0 entries"
