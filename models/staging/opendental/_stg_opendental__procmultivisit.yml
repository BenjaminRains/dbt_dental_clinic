version: 2

models:
  - name: stg_opendental__procmultivisit
    description: >
      Staging model for OpenDental procedure multi-visit records. Tracks procedures that require 
      multiple visits or appointments to complete, including complex treatment plans where 
      procedures span multiple appointments such as root canals, crowns, dentures, and 
      multi-stage implants. This table maintains the relationship between individual procedures 
      and their multi-visit status, including grouping related procedures, tracking completion 
      status, and managing in-process indicators.
      
      Used extensively for coordinating multi-appointment treatments, managing claim holds 
      until all procedures are complete, and ensuring proper insurance billing timing for 
      complex dental procedures.
    
    meta:
      # Data quality and business context
      record_count: "~284 multi-visit procedure records (from ETL config)"
      data_scope: >
        Incremental model including all multi-visit procedure records from 2023-01-01 forward.
        Limited dataset due to specific use for complex procedures requiring multiple appointments.
        Grouped procedures remain "in process" until all procedures in the group are complete.
      
      key_statistics:
        - metric: "Table importance level"
          value: "Critical - essential for multi-visit treatment coordination"
        - metric: "Extraction strategy" 
          value: "Full table extraction with incremental column SecDateTEdit"
        - metric: "Estimated record growth"
          value: "Low growth rate - only complex multi-visit procedures"
      
      known_issues:
        - description: "GroupProcMultiVisitNum may be null for standalone multi-visit procedures not part of a larger group"
          severity: "warn"
          identified_date: "2025-01-01"
          business_impact: "Normal behavior for single procedures marked as multi-visit but not grouped with others"
        
        - description: "ProcStatus values should align with procedurelog status codes but may lag behind actual procedure completion"
          severity: "warn" 
          identified_date: "2025-01-01"
          business_impact: "May cause temporary inconsistencies in reporting until status updates are synchronized"
      
      business_rules:
        - rule: "Procedures marked IsInProcess=1 should not have claims sent until all grouped procedures are complete"
          impact: "Critical for insurance billing - premature claim submission can cause payment delays"
        
        - rule: "All procedures in the same GroupProcMultiVisitNum should belong to the same patient"
          impact: "Data integrity requirement for proper treatment coordination"
        
        - rule: "Status changes should be coordinated with procedurelog table status updates"
          impact: "Ensures consistency between multi-visit tracking and main procedure records"
      
      usage_notes: >
        This model should be used in conjunction with stg_opendental__procedurelog for complete 
        procedure analysis. When analyzing treatment completion rates, procedures with 
        is_in_process=true should be considered incomplete even if individual procedure 
        status shows complete. Claims analysis should account for procedures held due to 
        multi-visit grouping. Group-level analysis requires grouping by group_procmultivisit_id 
        where not null.
    
    tests:
      # Row-level validation: entry_date should be reasonable (row-level expression)
      - dbt_utils.expression_is_true:
          expression: "entry_date >= '2000-01-01' and entry_date <= current_date + interval '1 day'"
          config:
            severity: error
            description: "Entry dates should be between 2000-01-01 and tomorrow"
      
      # Row-level validation: edit_date should be >= entry_date
      - dbt_utils.expression_is_true:
          expression: "edit_date >= entry_date"
          config:
            severity: warn
            description: "Edit date should not be earlier than entry date"
    
    columns:
      # Primary Key
      - name: procmultivisit_id
        description: >
          Primary key - Unique identifier for the procedure multi-visit record 
          (maps to ProcMultiVisitNum in OpenDental). Auto-generated sequence number 
          that uniquely identifies each multi-visit procedure tracking record.
        tests:
          - unique
          - not_null
          - positive_values

      # Foreign Keys  
      - name: group_procmultivisit_id
        description: >
          Foreign key to group related multi-visit procedures together (maps to 
          GroupProcMultiVisitNum in OpenDental). When multiple procedures are part 
          of the same complex treatment plan, they share the same group ID to ensure 
          coordinated completion tracking and claim processing. May be null for 
          standalone multi-visit procedures.
        tests:
          - positive_values:
              where: "group_procmultivisit_id is not null"
          - relationships:
              to: ref('stg_opendental__procmultivisit')
              field: procmultivisit_id
              where: "group_procmultivisit_id is not null"
              config:
                severity: warn
      
      - name: procedure_id
        description: >
          Foreign key to the associated procedure in the procedurelog table 
          (maps to ProcNum in OpenDental). Links this multi-visit tracking record 
          to the specific dental procedure being performed across multiple appointments.
        tests:
          - not_null
          - positive_values
          - relationships:
              to: ref('stg_opendental__procedurelog')
              field: procedure_id
              config:
                severity: error
      
      - name: patient_id
        description: >
          Foreign key to the patient receiving the multi-visit procedure 
          (maps to PatNum in OpenDental). Used for patient-level treatment 
          coordination and ensuring all grouped procedures belong to the same patient.
        tests:
          - not_null
          - positive_values
          - relationships:
              to: ref('stg_opendental__patient')
              field: patient_id
              config:
                severity: error

      # Status and Process Fields
      - name: procedure_status
        description: >
          Status code of the procedure (maps to ProcStatus in OpenDental), similar to 
          procedurelog status codes. Common values include:
          0 = Treatment Planned
          1 = Scheduled  
          2 = Complete
          3 = Existing Current
          4 = Existing Other
          5 = Referred
          6 = Deleted
          7 = Condition
          Status should align with corresponding procedure in procedurelog table.
        tests:
          - not_null
          - accepted_values:
              values: [0, 1, 2, 3, 4, 5, 6, 7]
              config:
                severity: warn
      
      - name: is_in_process
        description: >
          Flag indicating if the procedure is currently in process as part of a multi-visit 
          treatment (maps to IsInProcess in OpenDental, 0=No, 1=Yes converted to boolean). 
          When true, indicates that this procedure is part of an ongoing multi-visit treatment 
          and claims should be held until all procedures in the group are complete.
        tests:
          - not_null
          - boolean_values

      # Date Fields
      - name: entry_date
        description: >
          Date when the multi-visit procedure record was originally created 
          (maps to SecDateTEntry in OpenDental). Represents when the procedure 
          was first entered into the multi-visit tracking system, typically 
          during treatment planning phase.
        tests:
          - not_null
      
      - name: edit_date  
        description: >
          Timestamp when the multi-visit procedure record was last modified 
          (maps to SecDateTEdit in OpenDental). Updated automatically when 
          any changes are made to the record, including status updates or 
          grouping modifications.
        tests:
          - not_null

      # Required Metadata Columns
      - name: _loaded_at
        description: "Timestamp when the data was loaded into the data warehouse by the ETL pipeline (using current_timestamp)"
        tests:
          - not_null
      
      - name: _created_at
        description: >
          Timestamp when the record was created in the source system (OpenDental). 
          Maps to SecDateTEntry. Used for data lineage and audit tracking.
        tests:
          - not_null
      
      - name: _updated_at
        description: >
          Timestamp when the record was last updated in the source system (OpenDental). 
          Maps to SecDateTEdit. Used for incremental loading and change detection.
        tests:
          - not_null
