version: 2

models:
  - name: stg_opendental__patient
    description: "Standardized patient information from OpenDental dental practice management system"
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: source('opendental', 'patient')
      - dbt_utils.expression_is_true:
          name: balance_components_match_total
          expression: "total_balance <= (balance_0_30_days + balance_31_60_days + balance_61_90_days + balance_over_90_days + 0.01)"
          severity: warn
      - dbt_utils.expression_is_true:
          name: valid_schedule_time_range
          expression: "schedule_not_before_time <= schedule_not_after_time OR schedule_not_before_time IS NULL OR schedule_not_after_time IS NULL"
          severity: warn
      - dbt_utils.expression_is_true:
          name: different_providers
          expression: "primary_provider_id != secondary_provider_id OR primary_provider_id IS NULL OR secondary_provider_id IS NULL"
          severity: warn
      - dbt_utils.expression_is_true:
          name: valid_date_sequence
          expression: "(_updated_at >= _created_at) OR _created_at IS NULL"
          severity: warn
    columns:
      - name: patient_id
        description: "Primary key for patient records (PatNum in source)"
        tests:
          - unique
          - not_null
          - positive_values
      
      # Relationships
      - name: guarantor_id
        description: "Foreign key to guarantor patient"
        tests:
          - relationships:
              to: ref('stg_opendental__patient')
              field: patient_id
      - name: primary_provider_id
        description: "Foreign key to primary provider"
        tests:
          - relationships:
              to: ref('stg_opendental__provider')
              field: provider_id
      - name: secondary_provider_id
        description: "Foreign key to secondary provider"
        tests:
          - relationships:
              to: ref('stg_opendental__provider')
              field: provider_id
              where: "patient_status = 0 AND secondary_provider_id IS NOT NULL AND secondary_provider_id != 0 AND primary_provider_id IS NOT NULL"
      - name: clinic_id
        description: "Foreign key to clinic"
      - name: fee_schedule_id
        description: "Foreign key to fee schedule"
      
      # Demographics
      - name: middle_initial
        description: "Patient's middle initial"
      - name: preferred_name
        description: "Patient's preferred name"
      - name: gender
        description: "Patient's gender (0=Male, 1=Female, 2=Other)"
        tests:
          - accepted_values:
              values: [0, 1, 2]
      - name: language
        description: "Patient's preferred language"
      
      # Status and Classification
      - name: patient_status
        description: "Current status of the patient (0=Patient, 1=NonPatient, 2=Inactive, 3=Archived, 4=Deceased, 5=Deleted)"
        tests:
          - accepted_values:
              values: [0, 1, 2, 3, 4, 5]
      - name: position_code
        description: "Patient position classification (0=Default, 1=House, 2=Staff, 3=VIP, 4=Other)"
        tests:
          - accepted_values:
              values: [0, 1, 2, 3, 4]
      - name: student_status
        description: "Patient's student status if applicable"
      - name: urgency
        description: "Patient urgency classification (0=Normal, 1=High)"
        tests:
          - accepted_values:
              values: [0, 1]
      - name: premedication_required
        description: "Indicates if patient requires premedication (boolean)"
        tests:
          - not_null
      
      # Contact Preferences
      - name: preferred_confirmation_method
        description: "Patient's preferred method for appointment confirmations (0=None, 2=Email, 4=Text, 8=Phone)"
        tests:
          - accepted_values:
              values: [0, 2, 4, 8]
      - name: preferred_contact_method
        description: "Patient's preferred method for general contact (0=None, 2=Email, 3=Mail, 4=Phone, 5=Text, 6=Other, 8=Portal)"
        tests:
          - accepted_values:
              values: [0, 2, 3, 4, 5, 6, 8]
      - name: preferred_recall_method
        description: "Patient's preferred method for recall notifications (0=None, 2=Email, 4=Text, 8=Phone)"
        tests:
          - accepted_values:
              values: [0, 2, 4, 8]
      - name: text_messaging_consent
        description: "Indicates if patient has consented to text messaging (boolean)"
        tests:
          - not_null
      - name: prefer_confidential_contact
        description: "Indicates if patient requires confidential contact (boolean)"
        tests:
          - not_null
      
      # Financial Information
      - name: estimated_balance
        description: "Estimated current balance"
      - name: total_balance
        description: "Total outstanding balance"
      - name: balance_0_30_days
        description: "Balance aged 0-30 days"
        tests:
          - non_negative_or_null
      - name: balance_31_60_days
        description: "Balance aged 31-60 days"
        tests:
          - non_negative_or_null
      - name: balance_61_90_days
        description: "Balance aged 61-90 days"
        tests:
          - non_negative_or_null
      - name: balance_over_90_days
        description: "Balance aged over 90 days"
        tests:
          - non_negative_or_null
      - name: insurance_estimate
        description: "Estimated insurance portion"
      - name: payment_plan_due
        description: "Amount due under payment plan"
      - name: has_insurance_flag
        description: "Indicates if patient has insurance (boolean)"
        tests:
          - not_null
      - name: billing_cycle_day
        description: "Day of month for billing cycle (1-31)"
        tests:
          - accepted_values:
              values: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]
      
      # Dates
      - name: birth_date
        description: >
          Patient's date of birth.
          
          Note: 
          - NULL values are allowed for non-active patients (patient_status != 0)
          - As of 2025, approximately 2,614 patients have NULL birth dates
          - Most of these patients have first visits from the 1990s or 2006
          - Stakeholders should collect birth date information when these patients visit
        tests:
          - dbt_utils.expression_is_true:
              expression: "IS NOT NULL OR patient_status != 0"
              column_name: birth_date
              name: birth_date_required_for_active_patients
              config:
                severity: warn
                description: "Active patients should have birth dates, but some historical records may be missing this information"
          - dbt_utils.expression_is_true:
              expression: "< current_date"
              column_name: birth_date
      - name: age
        description: >
          Calculated age of patient.
          
          Note:
          - Ages over 120 are allowed for records with default birth date (1900-01-01)
          - These records need attention to update birth date information
          - As of 2025, there are 11 patients with ages over 120
        tests:
          - dbt_utils.expression_is_true:
              expression: "between 0 and 120 OR birth_date = '1900-01-01'"
              config:
                severity: warn
                description: "Ages over 120 are allowed for records with default birth date"
      - name: first_visit_date
        description: "Date of patient's first visit"
      - name: deceased_datetime
        description: "Date and time of death if applicable"
      - name: admit_date
        description: "Date patient was admitted"
      
      # Scheduling Preferences
      - name: schedule_not_before_time
        description: "Earliest preferred appointment time"
      - name: schedule_not_after_time
        description: "Latest preferred appointment time"
      - name: preferred_day_of_week
        description: "Preferred day for appointments (0=Sunday through 6=Saturday)"
        tests:
          - accepted_values:
              values: [0, 1, 2, 3, 4, 5, 6]
      - name: ask_to_arrive_early_minutes
        description: "Minutes patient should arrive before appointment"
      
      # Business Logic
      - name: planned_treatment_complete
        description: "Indicates if planned treatment is complete"

      # Required metadata columns
      - name: _loaded_at
        description: "Timestamp when the data was loaded into the data warehouse by the ETL pipeline (using current_timestamp)"
        tests:
          - not_null
      
      - name: _created_at
        description: "Timestamp when the record was created in the source system (OpenDental), sourced from SecDateEntry. Will be null for records with default date (0001-01-01)."
        tests:
          - not_null:
              where: "_created_at is not null"
      
      - name: _updated_at
        description: "Timestamp when the record was last updated in the source system (OpenDental), sourced from DateTStamp"
        tests:
          - not_null
      
      - name: _created_by_user_id
        description: "User who created the record in the source system (OpenDental), sourced from SecUserNumEntry"
        tests:
          - not_null