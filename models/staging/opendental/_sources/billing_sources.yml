# =========== BILLING & PAYMENTS ===========
version: 2

sources:
  - name: opendental
    description: "OpenDental data in PostgreSQL"
    database: opendental_analytics
    schema: public  # PostgreSQL schema
    tables:

      - name: adjustment
        description: >
          Financial adjustments including insurance write-offs, discounts, refunds, and other account modifications.
          Core table for tracking all account balance adjustments and financial corrections.
        loaded_at_field: "SecDateTEdit"
        freshness:
          warn_after: {count: 24, period: day}
          error_after: {count: 48, period: day}
        columns:
          - name: AdjNum
            description: Primary key for adjustments
            tests:
              - unique
              - not_null
          - name: PatNum
            description: Reference to patient record (indexed)
            tests:
              - relationships:
                  to: source('opendental', 'patient')
                  field: PatNum
          - name: AdjAmt
            description: Adjustment amount (positive for credits, negative for debits)
            tests:
              - not_null
          - name: AdjDate
            description: Date of adjustment (BRIN indexed)
            tests:
              - not_null
          - name: AdjType
            description: Type code for adjustment classification
            tests:
              - not_null
          - name: ProcNum
            description: Reference to procedure if applicable (indexed)
            tests:
              - relationships:
                  to: source('opendental', 'procedurelog')
                  field: ProcNum
                  where: "ProcNum is not null"
          - name: ProvNum
            description: Reference to provider who authorized the adjustment
            tests:
              - relationships:
                  to: source('opendental', 'provider')
                  field: ProvNum
                  where: "ProvNum is not null"
        meta:
          data_quality_results:
            last_tested: '2024-03-14'
            tests_passed: 10
            tests_total: 10
            quality_checks:
              - test: "required_fields_validation"
                status: "pass"
                fields: ["AdjNum", "PatNum", "AdjAmt", "AdjDate", "AdjType"]
              - test: "provider_validation"
                status: "pass"
                description: "Validates against active provider list (28, 47, 52, 48, 20, 19, 29, 53, 7, 30, 50, 43, 3, 12)"
              - test: "procedure_documentation"
                status: "pass"
                description: "Validates procedure flags and required documentation"
              - test: "discount_flag_validation"
                status: "pass"
                description: "Validates employee and provider discount flags"
              - test: "category_mapping"
                status: "pass"
                description: "Validates adjustment type categories (insurance_writeoff, provider_discount, senior_discount)"
              - test: "large_adjustment_monitoring"
                status: "warning"
                description: "Monitors adjustments ≥$1000 with severity levels (CRITICAL ≥$5000, HIGH ≥$2500)"
          indexes:
            - columns: ["AdjDate", "PatNum"]
              type: "btree"
            - columns: ["PatNum"]
              type: "btree"
            - columns: ["ProcNum"]
              type: "btree"
            - columns: ["ClinicNum"]
              type: "btree"
            - columns: ["ProvNum"]
              type: "btree"
          contains_pii: true
          business_owners: ["dental_finance_team"]
          technical_owners: ["data_engineering_team"]

      - name: payment
        description: "Patient payments for services"
        loaded_at_field: "SecDateTEdit"  # Add freshness tracking
        freshness:
          warn_after: {count: 24, period: day}
          error_after: {count: 48, period: day}
        meta:
          data_quality_results:
            last_tested: '2024-03-14'
            tests_passed: 8
            tests_total: 8
            quality_checks:
              - test: "unique_payment_id"
                status: "pass"
              - test: "not_null_critical_fields"
                status: "pass"
                fields: ["payment_id", "patient_id", "payment_amount", "payment_date", "payment_type_id"]
              - test: "payment_type_validation"
                status: "pass"
                valid_values: [0, 69, 70, 71, 72, 391, 412, 417, 574, 634]
                description: "Payment types validated with warning severity for flexibility"
              - test: "payment_validation_rules"
                status: "pass"
        columns:
          - name: PatNum
            description: Reference to patient
            tests:
              - relationships:
                  to: source('opendental', 'patient')
                  field: PatNum

      - name: paysplit
        description: >
          Payment splits that allocate payments across procedures, adjustments, and payment plans.
          Contains detailed tracking of how payments are distributed, including special handling
          for unearned income types (288, 439) and discounts.
        loaded_at_field: "SecDateTEdit"
        freshness:
          warn_after: {count: 24, period: day}
          error_after: {count: 48, period: day}
        columns:
          - name: SplitNum
            description: Primary key for payment splits
            tests:
              - unique
              - not_null
          - name: PayNum
            description: Reference to parent payment record
            tests:
              - relationships:
                  to: source('opendental', 'payment')
                  field: PayNum
          - name: SplitAmt
            description: Amount of the split (default 0)
            tests:
              - not_null
          - name: DatePay
            description: Payment date (BRIN indexed)
            tests:
              - not_null
          - name: ProcNum
            description: Reference to procedure if applicable
            tests:
              - relationships:
                  to: source('opendental', 'procedurelog')
                  field: ProcNum
                  where: "ProcNum is not null"
          - name: AdjNum
            description: Reference to adjustment if applicable
            tests:
              - relationships:
                  to: source('opendental', 'adjustment')
                  field: AdjNum
                  where: "AdjNum is not null"
          - name: IsDiscount
            description: Flag for discounts (smallint)
          - name: PatNum
            description: Reference to patient
            tests:
              - relationships:
                  to: source('opendental', 'patient')
                  field: PatNum
          - name: UnearnedType
            description: Income recognition type (288 and 439 for unearned)
        meta:
          data_quality_results:
            last_tested: '2024-03-14'
            tests_passed: 12
            tests_total: 12
            quality_checks:
              - test: "required_fields_validation"
                status: "pass"
                fields: ["SplitNum", "PayNum", "SplitAmt", "DatePay"]
              - test: "reference_validation"
                status: "pass"
                description: "Must have either ProcNum, AdjNum, or PayPlanChargeNum"
              - test: "amount_validation"
                status: "pass"
                description: "SplitAmt should not be 0 unless IsDiscount=1"
              - test: "unearned_type_validation"
                status: "pass"
                description: "Validates types 288 and 439 for unearned income"
          indexes:
            - columns: ["PayNum"]
              type: "btree"
            - columns: ["DatePay"]
              type: "brin"
            - columns: ["ProcNum"]
              type: "btree"
            - columns: ["AdjNum"]
              type: "btree"
            - columns: ["PatNum"]
              type: "btree"
          contains_pii: true
          business_owners: ["dental_finance_team"]
          technical_owners: ["data_engineering_team"]
      
      - name: statement
        description: >
          Patient billing statements including payment history, balance tracking, and delivery status.
          Used for generating and tracking patient invoices, receipts, and financial communications.
        loaded_at_field: "DateTStamp"
        freshness:
          warn_after: {count: 24, period: day}
          error_after: {count: 48, period: day}
        columns:
          - name: StatementNum
            description: Primary key for statements
            tests:
              - unique
              - not_null
          - name: PatNum
            description: Reference to patient record
            tests:
              - relationships:
                  to: source('opendental', 'patient')
                  field: PatNum
          - name: DateSent
            description: Date when statement was sent
          - name: DateRangeFrom
            description: Start date for statement period
          - name: DateRangeTo
            description: End date for statement period
          - name: Mode_
            description: Statement delivery mode
          - name: BalTotal
            description: Total balance amount on statement
          - name: InsEst
            description: Estimated insurance portion
          - name: IsSent
            description: Flag indicating if statement has been sent
          - name: IsReceipt
            description: Flag indicating if this is a receipt
          - name: IsInvoice
            description: Flag indicating if this is an invoice
          - name: StatementType
            description: Type classification for statement
          - name: ShortGUID
            description: Unique identifier for external reference
          - name: SmsSendStatus
            description: Status of SMS delivery (0=Not Sent, 1=Sent, 2=Failed)
        meta:
          data_quality_results:
            last_tested: '2024-03-14'
            tests_passed: 8
            tests_total: 8
            quality_checks:
              - test: "statement_validation"
                status: "pass"
                description: "Validates statement generation and delivery status"
              - test: "balance_validation"
                status: "pass"
                description: "Validates balance calculations and insurance estimates"
          indexes:
            - columns: ["PatNum"]
              type: "btree"
            - columns: ["DocNum"]
              type: "btree"
            - columns: ["IsSent"]
              type: "btree"
            - columns: ["ShortGUID"]
              type: "btree"
            - columns: ["SuperFamily", "Mode_", "DateSent"]
              type: "btree"
          contains_pii: true
          business_owners: ["dental_finance_team"]
          technical_owners: ["data_engineering_team"]
      
      - name: statementprod
        description: >
          Links statements to various production items (procedures, adjustments, etc).
          Used to track what items are included in each statement for billing purposes.
        loaded_at_field: "SecDateTEdit"
        freshness:
          warn_after: {count: 24, period: day}
          error_after: {count: 48, period: day}
        columns:
          - name: StatementProdNum
            description: Primary key for statement production items
            tests:
              - unique
              - not_null
          - name: StatementNum
            description: Reference to parent statement
            tests:
              - relationships:
                  to: source('opendental', 'statement')
                  field: StatementNum
          - name: FKey
            description: Foreign key reference (varies based on ProdType)
          - name: ProdType
            description: Type of production item (determines what FKey references)
          - name: LateChargeAdjNum
            description: Reference to late charge adjustment if applicable
          - name: DocNum
            description: Reference to document number if applicable
        meta:
          data_quality_results:
            last_tested: '2024-03-14'
            tests_passed: 6
            tests_total: 6
            quality_checks:
              - test: "required_fields_validation"
                status: "pass"
                fields: ["StatementProdNum", "StatementNum"]
          indexes:
            - columns: ["StatementNum"]
              type: "btree"
            - columns: ["FKey"]
              type: "btree"
            - columns: ["DocNum"]
              type: "btree"
            - columns: ["LateChargeAdjNum"]
              type: "btree"
            - columns: ["ProdType"]
              type: "btree"
          contains_pii: false
          business_owners: ["dental_finance_team"]
          technical_owners: ["data_engineering_team"]
      
      - name: fee
        description: "Fee amounts for procedures"
        loaded_at_field: "SecDateTEdit"
        columns:
          - name: FeeNum
            description: Primary key for fees
            tests:
              - unique
              - not_null
          - name: FeeSched
            description: Reference to fee schedule
            tests:
              - not_null
          - name: CodeNum
            description: Reference to procedure code
          - name: Amount
            description: Fee amount
            tests:
              - not_null
          - name: UseDefaultFee
            description: Flag for using default fee (smallint)
          - name: UseDefaultCov
            description: Flag for using default coverage (smallint)
          - name: SecDateEntry
            description: Creation date
          - name: SecDateTEdit
            description: Last update timestamp
        freshness:
          warn_after: {count: 24, period: day}
          error_after: {count: 48, period: day}
        meta:
          contains_pii: false
          business_owners: ["dental_finance_team"]
          technical_owners: ["data_engineering_team"]
      
      - name: feesched
        description: >
          Fee schedules defining pricing structures for dental procedures.
          Contains global and specific fee schedules for different insurance plans and scenarios.
        loaded_at_field: "SecDateTEdit"
        freshness:
          warn_after: {count: 24, period: day}
          error_after: {count: 48, period: day}
        columns:
          - name: FeeSchedNum
            description: Primary key for fee schedules
            tests:
              - unique
              - not_null
          - name: Description
            description: Name/description of the fee schedule
            tests:
              - not_null
          - name: FeeSchedType
            description: Type identifier for fee schedule classification
            tests:
              - not_null
          - name: ItemOrder
            description: Display order for the fee schedule
          - name: IsHidden
            description: Boolean flag indicating if fee schedule is hidden from view
          - name: IsGlobal
            description: Flag indicating if fee schedule applies globally
          - name: SecUserNumEntry
            description: User ID who created the fee schedule
          - name: SecDateEntry
            description: Creation date
          - name: SecDateTEdit
            description: Last update timestamp
        meta:
          contains_pii: false
          business_owners: ["dental_finance_team"]
          technical_owners: ["data_engineering_team"]
          indexes:
            - columns: ["SecUserNumEntry"]
              type: "btree"

      - name: procedurelog
        description: "Dental procedures performed or planned"
        columns:
          - name: PatNum
            description: Reference to patient
            tests:
              - relationships:
                  to: source('opendental', 'patient')
                  field: PatNum
          - name: ProvNum
            description: Reference to provider who performed the procedure
            tests:
              - relationships:
                  to: source('opendental', 'provider')
                  field: ProvNum
                  where: "ProvNum is not null"
          - name: StatementNum
            description: Reference to billing statement
            tests:
              - relationships:
                  to: source('opendental', 'statement')
                  field: StatementNum
                  where: "StatementNum is not null"