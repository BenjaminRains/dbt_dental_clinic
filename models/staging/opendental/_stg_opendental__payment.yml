version: 2

models:
  - name: stg_opendental__payment
    description: >
      Staged payment data from OpenDental system.
      Analysis based on 2023-current data.
    tests:
      - payment_validation_rules:
          config:
            severity: warn  # Changed from error to warn
      - dbt_utils.expression_is_true:
          expression: "payment_date >= '2023-01-01'"
      - dbt_utils.expression_is_true:
          expression: "payment_date > '2000-01-01'"
      - dbt_utils.expression_is_true:
          expression: "payment_date <= current_date"  # PostgreSQL syntax
    columns:
      - name: payment_id
        description: Primary key for payments
        tests:
          - unique
          - not_null
      - name: patient_id
        description: Foreign key to patients
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__patient')
              field: patient_id
      - name: clinic_id
        description: Foreign key to clinics
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__clinic')
              field: clinic_id
      - name: payment_type_id
        description: |
          Type of payment. Current patterns (2023-present):
          - 71: Most common type (8,335 payments), avg $293
          - 0: Administrative entries (1,110 payments), must be $0
          - 69: High value payments (965 payments)
              * Average: $1,036
              * Warning Tiers:
                - LOW: > $5,000
                - MEDIUM: > $10,000
                - HIGH: > $25,000
                - CRITICAL: > $50,000
          - 70: Regular payments (609 payments), avg $348
          - 391: High value (482 payments), avg $922
          - 412: Newer payment type (187 payments), avg $199
          - 72: Refunds (50 payments), always negative
          - 634: New type since Sept 2024 (16 payments), avg $6,009
          - 574: Very high value (6 payments), avg $26,071
          - 417: Special cases (6 payments), avg $2,967
        tests:
          - not_null
          - accepted_values:
              values: [0, 69, 70, 71, 72, 391, 412, 417, 574, 634]
              config:
                severity: warn  # Keep warning severity for flexibility
      - name: deposit_id
        description: Foreign key to deposits
      - name: created_by_user_id
        description: Foreign key to users who created the payment
        tests:
          - relationships:
              to: ref('stg_opendental__userod')
              field: user_id
      - name: payment_date
        description: Date of the payment
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= '2023-01-01'"
              column_name: payment_date
          - dbt_utils.expression_is_true:
              expression: "<= current_date"
      - name: payment_amount
        description: Amount of the payment
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0 OR payment_type_id = 72"
              column_name: payment_amount
      - name: merchant_fee
        description: Fee charged by the merchant for processing the payment
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              column_name: merchant_fee
      - name: check_number
        description: Check number for check payments
        tests:
          - dbt_utils.expression_is_true:
              expression: "length(check_number) <= 25"
      - name: bank_branch
        description: Bank branch information for check payments
        tests:
          - dbt_utils.expression_is_true:
              expression: "length(bank_branch) <= 25"
      - name: external_id
        description: External reference ID for the payment
        tests:
          - dbt_utils.expression_is_true:
              expression: "length(external_id) <= 255"
      - name: is_split_flag
        description: Indicates if the payment is split across multiple procedures
        tests:
          - not_null
      - name: is_recurring_cc_flag
        description: Indicates if this is a recurring credit card payment
        tests:
          - not_null
      - name: is_cc_completed_flag
        description: Indicates if the credit card payment was completed successfully
        tests:
          - not_null
      - name: payment_status
        description: Current status of the payment
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              column_name: payment_status
      - name: process_status
        description: Processing status of the payment
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              column_name: process_status
      - name: payment_source
        description: Source of the payment
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0"
              column_name: payment_source
      - name: recurring_charge_date
        description: Date when a recurring payment will be charged
        tests:
          - dbt_utils.expression_is_true:
              expression: "> '2000-01-01'"
              column_name: recurring_charge_date
      - name: entry_date
        description: Date when the payment was entered into the system
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "> '2000-01-01'"
              column_name: entry_date
      - name: payment_notes
        description: Additional notes about the payment
      - name: receipt_text
        description: Text content of the payment receipt
      - name: _loaded_at
        description: Timestamp when the data was loaded into the data warehouse
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "<= current_timestamp"
              column_name: _loaded_at
      - name: _created_at
        description: Timestamp when the record was created in the source system
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "<= current_timestamp"
              column_name: _created_at
      - name: _updated_at
        description: Timestamp when the record was last updated in the source system
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "<= current_timestamp"
              column_name: _updated_at
          - dbt_utils.expression_is_true:
              expression: ">= _created_at"