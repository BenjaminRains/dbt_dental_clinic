version: 2

models:
  - name: int_payment_allocated
    description: >
      Intermediate model for payment allocations that combines patient payments and 
      insurance payments. This model serves as the foundation for payment reconciliation 
      and accounts receivable analysis.
      Part of System C: Payment Allocation & Reconciliation.
      
      Key features:
      - Combines patient payments and insurance payments
      - Tracks payment allocations and status
      - Maintains payment processing information
      - Preserves detailed payment metadata
      - Supports AR calculations and aging analysis
      
      Data Sources:
      - stg_opendental__payment: Base patient payment information
      - stg_opendental__claimpayment: Insurance payment details
      - stg_opendental__claimproc: Claim procedure information
      - stg_opendental__definition: Payment type and status definitions
      
      Business rules:
      - Insurance claims are filtered to only include:
        * Status 1 (Received) or 3 (Supplemental) claims
        * Claims with a valid claim_payment_id (excludes claim_payment_id = 0)
      - Payment dates are used for AR calculations
      - Payment types and statuses are managed through the definition table
      - Payment allocations must be properly linked to procedures or claims
    
    config:
      materialized: incremental
      unique_key: payment_allocation_id
      schema: intermediate
    
    columns:
      - name: payment_allocation_id
        description: Unique identifier for each payment allocation record
        tests:
          - unique
          - not_null

      - name: payment_source_type
        description: Type of payment source (PATIENT or INSURANCE)
        tests:
          - not_null
          - accepted_values:
              values: ['PATIENT', 'INSURANCE']

      - name: payment_id
        description: Foreign key to either patient payment or insurance claim payment
        tests:
          - not_null

      - name: patient_id
        description: Foreign key to the patient
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__patient')
              field: patient_id

      - name: clinic_id
        description: Foreign key to the clinic
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__clinic')
              field: clinic_id

      - name: provider_id
        description: Foreign key to the provider
        tests:
          - relationships:
              to: ref('stg_opendental__provider')
              field: provider_id

      - name: procedure_id
        description: Foreign key to the procedure
        tests:
          - relationships:
              to: ref('stg_opendental__procedurelog')
              field: procedure_id

      - name: adjustment_id
        description: Foreign key to the adjustment
        tests:
          - relationships:
              to: ref('stg_opendental__adjustment')
              field: adjustment_id

      - name: split_amount
        description: Amount allocated in this payment
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -100000
              max_value: 100000

      - name: payment_date
        description: Date when the payment was made
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2023-01-01'"
              max_value: "{{ var('max_valid_date', 'current_date') }}"

      - name: procedure_date
        description: Date of the associated procedure
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2023-01-01'"
              max_value: "{{ var('max_valid_date', 'current_date') }}"

      - name: payment_type_id
        description: |
          Type of payment. Current patterns (2023-present):
          - 71: Most common type (8,335 payments), avg $293
          - 0: Administrative entries (1,110 payments), must be $0
          - 69: High value payments (965 payments)
              * Average: $1,036
              * Warning Tiers:
                - LOW: > $5,000
                - MEDIUM: > $10,000
                - HIGH: > $25,000
                - CRITICAL: > $50,000
          - 70: Regular payments (609 payments), avg $348
          - 391: High value (482 payments), avg $922
          - 412: Newer payment type (187 payments), avg $199
          - 72: Refunds (50 payments), always negative
          - 634: New type since Sept 2024 (16 payments), avg $6,009
          - 574: Very high value (6 payments), avg $26,071
          - 417: Special cases (6 payments), avg $2,967
          
          This field is also a foreign key to the definition table (category_id = 1) which contains
          the official payment type descriptions and metadata. The relationship ensures that all
          payment types used in the system are properly defined and maintained in a central location.
        tests:
          - not_null
          - accepted_values:
              values: [0, 69, 70, 71, 72, 391, 412, 417, 574, 634]
              config:
                severity: warn
          - relationships:
              to: ref('stg_opendental__definition')
              field: definition_id
              where: "category_id = 1"

      - name: payment_source
        description: Source of the payment
        tests:
          - not_null:
              where: "payment_source_type = 'PATIENT'"

      - name: payment_status
        description: Foreign key to the payment status definition
        tests:
          - not_null:
              where: "payment_source_type = 'PATIENT'"
          - relationships:
              to: ref('stg_opendental__definition')
              field: definition_id
              where: "category_id = 2"

      - name: process_status
        description: Foreign key to the process status definition
        tests:
          - not_null:
              where: "payment_source_type = 'PATIENT'"
          - relationships:
              to: ref('stg_opendental__definition')
              field: definition_id
              where: "category_id = 2"

      - name: merchant_fee
        description: Merchant fee associated with the payment
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1000
              where: "payment_source_type = 'PATIENT'"

      - name: payment_notes
        description: Additional notes about the payment

      - name: check_number
        description: Check number for the payment
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: bank_branch
        description: Bank branch information
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: created_by_user_id
        description: ID of the user who created the record
        tests:
          - relationships:
              to: ref('stg_opendental__user')
              field: user_id

      - name: entry_date
        description: Date when the record was entered
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2023-01-01'"
              max_value: "{{ var('max_valid_date', 'current_date') }}"

      - name: updated_at
        description: Timestamp when the record was last updated
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2023-01-01'"
              max_value: "{{ var('max_valid_date', 'current_date') }}"

      - name: deposit_id
        description: Foreign key to the deposit record
        tests:
          - relationships:
              to: ref('stg_opendental__deposit')
              field: deposit_id

      - name: external_id
        description: External system reference ID for the payment
        tests:
          - not_null:
              where: "payment_source_type = 'PATIENT'"

      - name: is_cc_completed_flag
        description: Flag indicating if credit card payment is completed
        tests:
          - accepted_values:
              values: [true, false]
              where: "payment_source_type = 'PATIENT'"

      - name: recurring_charge_date
        description: Next scheduled date for recurring payment
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2023-01-01'"
              max_value: "{{ var('max_valid_date', 'current_date') }}"
              where: "payment_source_type = 'PATIENT'"

      - name: receipt_text
        description: Text content of the payment receipt
        tests:
          - not_null:
              where: "payment_source_type = 'PATIENT'"

      - name: carrier_name
        description: Name of the insurance carrier
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: is_partial
        description: Flag indicating if this is a partial insurance payment
        tests:
          - accepted_values:
              values: [true, false]
              where: "payment_source_type = 'INSURANCE'"

      - name: payment_group_id
        description: Group identifier for related payments
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: insurance_subscriber_id
        description: Foreign key to the insurance subscriber
        tests:
          - relationships:
              to: ref('stg_opendental__inssub')
              field: inssub_id
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: claim_id
        description: Foreign key to the insurance claim
        tests:
          - relationships:
              to: ref('stg_opendental__claim')
              field: claim_id
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: plan_id
        description: Foreign key to the insurance plan
        tests:
          - relationships:
              to: ref('stg_opendental__insplan')
              field: insurance_plan_id
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: deductible_applied
        description: Amount of deductible applied to this payment
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              where: "payment_source_type = 'INSURANCE'"

      - name: write_off
        description: Amount written off for this payment
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              where: "payment_source_type = 'INSURANCE'"

      - name: allowed_override
        description: Manual override for allowed amount
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              where: "payment_source_type = 'INSURANCE'"

      - name: copay_amount
        description: Copay amount for this payment
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              where: "payment_source_type = 'INSURANCE'"

      - name: paid_other_insurance
        description: Amount paid by other insurance
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              where: "payment_source_type = 'INSURANCE'"

      - name: base_estimate
        description: Base estimate before adjustments
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              where: "payment_source_type = 'INSURANCE'"

      - name: insurance_estimate_total
        description: Total estimate from insurance
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              where: "payment_source_type = 'INSURANCE'"

      - name: status
        description: Status of the claim procedure
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"
          - accepted_values:
              values: [1, 3]
              where: "payment_source_type = 'INSURANCE'"

      - name: percentage
        description: Percentage of coverage for this procedure
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
              where: "payment_source_type = 'INSURANCE'"

      - name: is_transfer
        description: Flag indicating if this is a transfer payment
        tests:
          - accepted_values:
              values: [true, false]
              where: "payment_source_type = 'INSURANCE'"

      - name: is_overpay
        description: Flag indicating if this is an overpayment
        tests:
          - accepted_values:
              values: [true, false]
              where: "payment_source_type = 'INSURANCE'"

      - name: remarks
        description: Additional remarks about the claim procedure
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: code_sent
        description: Procedure code sent to insurance
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: estimate_note
        description: Notes about the insurance estimate
        tests:
          - not_null:
              where: "payment_source_type = 'INSURANCE'"

      - name: payment_type_description
        description: |
          Human-readable description of the payment type from definition table.
          Current patterns (2023-present):
          - Standard Payment (type 71): Most common type, avg $293
          - Administrative (type 0): Must be $0
          - High Value Payment (type 69): 
              * Average: $1,036
              * Warning Tiers:
                - LOW: > $5,000
                - MEDIUM: > $10,000
                - HIGH: > $25,000
                - CRITICAL: > $50,000
          - Regular Payment (type 70): avg $348
          - High Value (type 391): avg $922
          - New Payment Type (type 412): avg $199
          - Refund (type 72): Always negative
          - New Type (type 634): avg $6,009
          - Very High Value (type 574): avg $26,071
          - Special Case (type 417): avg $2,967
        tests:
          - not_null
          - accepted_values:
              values: [
                'Standard Payment', 'Administrative', 'High Value Payment',
                'Regular Payment', 'High Value', 'New Payment Type', 'Refund',
                'New Type', 'Very High Value', 'Special Case', 'Insurance Check',
                'Electronic Payment', 'Insurance Credit', 'Unknown',
                'Unknown Insurance Payment'
              ]
              config:
                severity: warn
          - relationships:
              to: ref('stg_opendental__definition')
              field: item_name
              where: "category_id = 1"

      - name: payment_status_description
        description: |
          Human-readable description of the payment status from definition table.
          Current patterns:
          - Pending (status 0): Initial state
          - Completed (status 1): Successfully processed
          - Failed (status 2): Processing failed
          - Voided (status 3): Cancelled payment
        tests:
          - not_null
          - accepted_values:
              values: ['Pending', 'Completed', 'Failed', 'Voided', 'Unknown', 'N/A']
              config:
                severity: warn
          - relationships:
              to: ref('stg_opendental__definition')
              field: item_name
              where: "category_id = 2"

      - name: process_status_description
        description: |
          Human-readable description of the process status from definition table.
          Current patterns:
          - Not Processed (status 0): Initial state
          - Processing (status 1): Currently being processed
          - Processed (status 2): Successfully completed
          - Error (status 3): Processing error occurred
        tests:
          - not_null
          - accepted_values:
              values: ['Not Processed', 'Processing', 'Processed', 'Error', 'Unknown', 'N/A']
              config:
                severity: warn
          - relationships:
              to: ref('stg_opendental__definition')
              field: item_name
              where: "category_id = 2"

      - name: include_in_ar
        description: Flag indicating if this payment should be included in AR calculations
        tests:
          - not_null
          - accepted_values:
              values: [true, false]

      - name: model_created_at
        description: Timestamp when this model was created
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2023-01-01'"
              max_value: "{{ var('max_valid_date', 'current_date') }}"

      - name: model_updated_at
        description: Timestamp when this model was last updated
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2023-01-01'"
              max_value: "{{ var('max_valid_date', 'current_date') }}"

    tests:
      # Date range validation
      - dbt_utils.expression_is_true:
          expression: "payment_date >= '2023-01-01'"
          config:
            severity: warn

      # Payment amount validation based on payment type
      - dbt_utils.expression_is_true:
          expression: >
            NOT (
              payment_source_type = 'PATIENT' AND
              (
                (payment_type_id = 0 AND split_amount != 0) OR
                (payment_type_id = 72 AND split_amount >= 0) OR
                (payment_type_id = 69 AND split_amount > 50000) OR
                (payment_type_id = 574 AND split_amount > 50000)
              )
            )
          config:
            severity: error
            description: "Payment amounts must match their type constraints"

      # Insurance payment validation
      - dbt_utils.expression_is_true:
          expression: "NOT (payment_source_type = 'INSURANCE' AND payment_id IS NULL)"
          config:
            severity: error
            description: "Insurance payments must have a valid claim_payment_id"

      # AR balance alignment with patient aging buckets
      - payment_balance_alignment:
          config:
            severity: error
            description: "Payment allocations must sum to match patient total balance"

    meta:
      owner: "dental_finance_team"
      contains_pii: true
      business_process: "Payment Allocation & Reconciliation"
      refresh_frequency: "hourly"
      business_impact: "High"
      data_quality_requirements:
        - "All payment allocations must have a valid payment_id"
        - "Payment amounts must be positive unless explicitly marked as refunds"
        - "Payment dates must be within valid business date ranges"
        - "Insurance payments must be properly linked to claim procedures"
        - "Deposit IDs must be valid when present"
        - "Insurance subscriber IDs must be valid when present"
        - "Claim IDs must be valid when present"
        - "Plan IDs must be valid when present"
        - "Payment types and statuses must be valid definitions"
        - "Monitor high-value payments for potential fraud or errors"
        - "Insurance claims must have a valid claim_payment_id (excludes claim_payment_id = 0)" 