version: 2

models:
  - name: int_communication_templates
    description: >
      Comprehensive communication templates model that standardizes and consolidates messaging
      templates used for patient communications. This model serves as the central repository
      for all templated messages used in automated communications with patients.

      Grain: One row per unique communication template.
      Each template represents a distinct message pattern used in patient communications
      and can be of various types (email, SMS) and categories (appointment, billing, etc.).
      Templates are sourced from Practice by Numbers campaigns, standardized text messages,
      and auto-detected communication patterns.

      Key features:
      - Extracts templates from Practice by Numbers (PbN) campaign messages
      - Includes standardized text message templates for common scenarios
      - Auto-detects templates from frequently used communication patterns
      - Standardizes template structure with consistent metadata
      - Classifies templates by type (email, SMS) and purpose category
      - Defines variables/placeholders for template personalization
      - Provides subject lines based on template purpose
      - Tracks template creation and update timestamps
      - Supports template reuse across the communication system
      - Enables consistent patient messaging across the practice
      - Uses PostgreSQL's pg_trgm extension for efficient text similarity matching
      - Implements GIN index on content for fast trigram searches

      Data Sources:
      - int_patient_communications_base: Source for PbN campaign templates and auto-detected patterns
      - Standardized text message templates defined in the model

      Business rules:
      - PbN templates extracted from campaign messages with distinct subjects
      - Text message templates follow standardized formats for common scenarios
      - Template type determined by source (email for PbN, SMS for text messages)
      - Template category assigned based on campaign name and content analysis
      - Variables defined for each template type (e.g., PATIENT_NAME, CLINIC_NAME)
      - Auto-detected templates created from frequently used communication patterns
      - Templates marked as active by default for immediate availability
      - Each template has a standardized format regardless of source
      - Template matching uses trigram similarity for accurate content comparison
      - Only active templates are used for matching
    tests:
      # Validates template_name and content have at least one non-null value
      - dbt_utils.expression_is_true:
          expression: "template_name IS NOT NULL OR content IS NOT NULL"
          config:
            severity: error
            description: "At least one of template_name or content must be non-null"

      # Validates content length for non-null content
      - dbt_utils.expression_is_true:
          expression: "content IS NULL OR LENGTH(content) > 10"
          config:
            severity: error
            description: "Content must be at least 10 characters long when present"

      # Validates template_type values
      - dbt_utils.expression_is_true:
          expression: "template_type IN ('email', 'SMS', 'letter')"
          config:
            severity: error
            description: "Template type must be one of: email, SMS, or letter"

      # Validates template category values
      - dbt_utils.expression_is_true:
          expression: "category IN ('appointment', 'billing', 'clinical', 'recall', 'forms', 'general')"
          config:
            severity: error
            description: "Category must be one of the accepted values"

      # Validates email templates have subject lines
      - dbt_utils.expression_is_true:
          expression: "(template_type = 'email' AND subject IS NOT NULL) OR (template_type != 'email')"
          config:
            severity: error
            description: "Email templates must have subject lines"

      # Validates template variables for templates with placeholders
      - dbt_utils.expression_is_true:
          expression: "(content NOT LIKE '%{_%') OR (array_length(variables, 1) > 0)"
          config:
            severity: warn
            description: "Templates with placeholders must have defined variables"

      # Validates template_name length
      - dbt_utils.expression_is_true:
          expression: "LENGTH(template_name) > 3"
          config:
            severity: error
            description: "Template name must be at least 4 characters long"

      # Validates updated_at is after created_at when present
      - dbt_utils.expression_is_true:
          expression: "updated_at IS NULL OR updated_at >= created_at"
          config:
            severity: error
            description: "Updated timestamp must be after or equal to created timestamp"
    columns:
      - name: template_id
        description: Unique identifier for the template
        tests:
          - unique
          - not_null
      
      - name: template_name
        description: Name of the template (campaign name for PbN templates, template type for text messages)
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "LENGTH(template_name) > 3"
      
      - name: template_type
        description: Type of template (email for PbN campaigns, SMS for text messages)
        tests:
          - not_null
          - accepted_values:
              values: ['email', 'SMS']
      
      - name: category
        description: Category of the template (appointment, billing, clinical, etc.)
        tests:
          - not_null
          - accepted_values:
              values: ['appointment', 'billing', 'clinical', 'recall', 'forms', 'general']
      
      - name: subject
        description: Subject line for the template (required for email templates)
        tests:
          - not_null:
              where: "template_type = 'email'"
      
      - name: content
        description: Content of the template (message body for text messages, NULL for PbN templates)
        tests:
          - not_null:
              where: "template_type = 'SMS'"
          - dbt_utils.expression_is_true:
              expression: "LENGTH(content) > 10"
              where: "content IS NOT NULL"
      
      - name: variables
        description: Array of variables used in the template for personalization
        tests:
          # Tests that variables array exists and has elements when content has placeholders
          - dbt_utils.expression_is_true:
              expression: "IS NOT NULL AND array_length(variables, 1) > 0"
              config:
                severity: warn
                description: "Templates with placeholders must have defined variables"
                column_name: variables
      
      - name: is_active
        description: Flag indicating if the template is active
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "is_active IS TRUE OR is_active IS FALSE"
              where: "is_active IS NOT NULL"
      
      - name: created_by
        description: ID of the user who created the template
        tests:
          - relationships:
              to: ref('stg_opendental__userod')
              field: user_id
              where: "created_by IS NOT NULL"
      
      - name: created_at
        description: Timestamp when this template was first created
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "created_at < current_timestamp"
      
      - name: updated_at
        description: Timestamp when this template was last updated
        tests:
          - dbt_utils.expression_is_true:
              expression: "updated_at IS NULL OR updated_at >= created_at"
      
      - name: model_created_at
        description: Timestamp when this record was created in the dbt model
        tests:
          - not_null
      
      - name: model_updated_at
        description: Timestamp when this record was last updated in the dbt model
        tests:
          - not_null

    meta:
      business_owners: ["dental_communications_team", "marketing_team"]
      technical_owners: ["data_engineering_team"]
      refresh_frequency: "daily"
      contains_pii: false
      data_quality_requirements:
        - "All templates must have unique template_id values"
        - "Template types must be one of the accepted values (email, SMS)"
        - "Template categories must follow the established taxonomy"
        - "Template content must be substantial (over 10 characters)"
        - "Templates with variables must have non-empty variables array"
        - "Email templates must have subject lines"
        - "Variables should be defined in the format {VARIABLE_NAME}"
        - "Template names should be descriptive and unique"
        - "Content must be properly formatted for the template type"