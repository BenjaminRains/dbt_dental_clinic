version: 2

models:
  - name: int_automated_communications
    description: >
      Comprehensive automated communications model that tracks system-generated messages
      sent to patients. This model consolidates all automated, template-based communications
      into a structured format that enables tracking of delivery, engagement, and effectiveness.

      Grain: One row per automated communication sent to a patient. Each record represents 
      a single message sent through an automated system with automated_communication_id 
      as the primary key.

      Key features:
      - Identifies communications sent through automated systems
      - Links to base communication records and templates
      - Tracks triggers that initiated the communication
      - Monitors delivery status and timestamps
      - Provides metrics on engagement (opens, clicks, replies)
      - Enables analysis of automated communication effectiveness
      - Supports campaign performance tracking

      Data Sources:
      - int_patient_communications: Base communication records
      - int_communication_templates: Template definitions
      - Pattern matching to identify automated communications

      Business rules:
      - Communications are identified as automated based on program association, batch sending, and template content
      - Trigger types are determined by content pattern matching
      - Status reflects whether the communication was delivered and if there was a response
      - Engagement metrics track opens, clicks, replies, and bounces
      - All automated communications link to a template and base communication
    
    config:
      materialized: incremental
      schema: intermediate
      unique_key: automated_communication_id
    
    columns:
      - name: automated_communication_id
        description: >
          Primary key - Unique identifier for the automated communication record.
          Generated as a surrogate key based on communication_id and template_id.
        tests:
          - unique
          - not_null
      
      - name: communication_id
        description: >
          Foreign key to int_patient_communications. Links this automated communication
          to its base communication record.
        tests:
          - not_null
          - relationships:
              to: ref('int_patient_communications')
              field: communication_id
      
      - name: template_id
        description: >
          Foreign key to int_communication_templates. Identifies which template
          was used to generate this communication.
        tests:
          - not_null
          - relationships:
              to: ref('int_communication_templates')
              field: template_id
      
      - name: trigger_type
        description: >
          Type of trigger that initiated the automated communication.
          Examples: appointment_reminder, recall_notice, birthday_greeting,
          balance_reminder, new_patient_welcome, general_notification.
        tests:
          - not_null
          - accepted_values:
              values: ['appointment_reminder', 'recall_notice', 'birthday_greeting', 'balance_reminder', 'new_patient_welcome', 'general_notification']
      
      - name: trigger_details
        description: >
          Additional details about what triggered this communication, such as appointment_id,
          statement_id, recall_date, etc. Stored as a key-value string that can be parsed
          for specific information.
      
      - name: scheduled_datetime
        description: >
          Timestamp when the communication was scheduled to be sent. May match the
          sent_datetime for immediately sent communications.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2020-01-01'"
              max_value: "'{{ var('max_valid_date', 'current_date') }}'"
      
      - name: sent_datetime
        description: >
          Timestamp when the communication was actually sent. Corresponds to the
          communication_datetime in the base communication record.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2020-01-01'"
              max_value: "'{{ var('max_valid_date', 'current_date') }}'"
      
      - name: status
        description: >
          Status of the automated communication. Possible values: sent, undelivered,
          responded_positive, responded_negative.
        tests:
          - not_null
          - accepted_values:
              values: ['sent', 'undelivered', 'responded_positive', 'responded_negative']
      
      - name: recipient_count
        description: >
          Number of recipients for this communication. For individual messages, this will
          typically be 1. For batch communications, this may be higher.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 1000
      
      - name: open_count
        description: >
          Number of times the communication was opened (for email communications).
          This is a basic engagement metric for tracking email effectiveness.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1000
      
      - name: click_count
        description: >
          Number of times links in the communication were clicked (for email communications).
          This is an engagement metric for tracking interactive response.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1000
      
      - name: reply_count
        description: >
          Number of replies received in response to the communication.
          Determined by identifying inbound communications from the same patient
          within a reasonable timeframe after the automated message.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
      
      - name: bounce_count
        description: >
          Number of bounces (for email communications). Indicates delivery failures
          that could signal invalid contact information.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10
      
      - name: model_created_at
        description: >
          Timestamp when this record was created in the dbt model.
        tests:
          - not_null
      
      - name: model_updated_at
        description: >
          Timestamp when this record was last updated in the dbt model.
        tests:
          - not_null

    tests:
      # Status validation
      - dbt_utils.expression_is_true:
          expression: >
            status IN ('sent', 'undelivered', 'responded_positive', 'responded_negative')
          config:
            severity: error
            description: >
              Status must be one of the defined values.

      # Datetime validation
      - dbt_utils.expression_is_true:
          expression: >
            scheduled_datetime <= sent_datetime
            AND sent_datetime <= CURRENT_TIMESTAMP
          config:
            severity: error
            description: >
              Scheduled datetime must be before or equal to sent datetime, and sent datetime must be in the past.

      # Relationship validation
      - dbt_utils.expression_is_true:
          expression: >
            communication_id IN (SELECT communication_id FROM {{ ref('int_patient_communications') }})
            AND template_id IN (SELECT template_id FROM {{ ref('int_communication_templates') }})
          config:
            severity: error
            description: >
              All automated communications must link to valid communication and template records.

      # Metrics validation
      - dbt_utils.expression_is_true:
          expression: >
            open_count >= 0
            AND click_count >= 0
            AND reply_count >= 0
            AND bounce_count >= 0
            AND recipient_count > 0
          config:
            severity: error
            description: >
              All count metrics must be non-negative, and recipient_count must be positive.

      # Trigger type validation
      - dbt_utils.expression_is_true:
          expression: >
            (trigger_type = 'appointment_reminder' AND trigger_details LIKE 'appointment_id=%')
            OR (trigger_type = 'recall_notice' AND trigger_details LIKE 'recall_date=%')
            OR (trigger_type = 'balance_reminder' AND trigger_details LIKE 'statement_id=%')
            OR trigger_type IN ('birthday_greeting', 'new_patient_welcome', 'general_notification')
          config:
            severity: warn
            description: >
              Trigger details should be consistent with trigger type.

    meta:
      business_owners: ["dental_communications_team", "marketing_team"]
      technical_owners: ["data_engineering_team"]
      refresh_frequency: "daily"
      contains_pii: true
      data_quality_requirements:
        - "All automated communications must be linked to valid communication records"
        - "All automated communications must be linked to valid templates"
        - "Trigger types must be accurately detected from content patterns"
        - "Status must reflect accurate delivery and response information"
        - "Engagement metrics must be accurate and non-negative"
        - "Scheduled and sent datetimes must be valid and chronological"
        - "Future incremental loading must only process new communications"