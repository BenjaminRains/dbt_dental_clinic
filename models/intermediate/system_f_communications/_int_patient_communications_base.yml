version: 2

models:
  - name: int_patient_communications_base
    description: >
      Base model for patient communications that provides clean, foundational data
      with enhanced tracking capabilities. This model serves as the starting point
      for all communication-related models in the system.

      Grain: One row per individual communication event between the dental office and a patient.
      Each record represents a single interaction (phone call, email, text message, etc.) with
      communication_id as the primary key derived from commlog_id in the source system.

      Key features:
      - Provides clean, foundational communication data
      - Includes only essential fields and joins
      - Tracks follow-up activities and requirements
      - Includes last visit date tracking
      - Extracts linked entities from message content
      - Includes basic categorization and outcome determination
      - Links to patient and user context
      - Enhanced direction handling (outbound, inbound, system, unknown)
      - Improved regex patterns for entity extraction
      - More comprehensive content analysis patterns
      - Tracks first visit date for patient history
      - Enhanced data quality validations and tests

      System Communications (user_id = 0):
      - Type 224: Primary appointment notification system (mode 1,4)
      - Type 228: Secondary automated communication system (mode 4)
      - Type 603: Tertiary communication system (mode 5)
      - Type 0: Legacy system communications (mode 5)
      These automated communications are primarily outbound and focused on appointment notifications
      and general patient communications.

      Data Sources:
      - stg_opendental__commlog: Primary source of communication data
      - int_patient_profile: Patient demographic information
      - stg_opendental__userod: User and provider information
      - stg_opendental__appointment: Appointment data for last visit tracking
      - stg_opendental__histappointment: Historical appointment data for last visit tracking

      Business rules:
      - Communication direction determined by the is_sent flag (2=outbound, 1=inbound, 0=system, else unknown)
      - Communication category extracted via keyword analysis from message content
      - Linked entities (appointments, claims, procedures) extracted via regex pattern matching
      - Phone numbers extracted from notes for contact tracking
      - Follow-up requirements detected through keyword analysis
      - Default follow-up date set to 7 days in the future when explicit date not found
      - Full patient context linked through patient_id
      - User context linked through user_id with optional provider association
      - Last visit date calculated from both current and historical appointment data
      - First visit date tracked for patient history
      - Enhanced data quality validations for all fields

    config:
      materialized: incremental
      schema: intermediate
      unique_key: communication_id
    
    columns:
      - name: communication_id
        description: >
          Primary key - Unique identifier for the communication record.
          Direct mapping from commlog_id in the source system.
        tests:
          - unique
          - not_null
          - relationships:
              to: ref('stg_opendental__commlog')
              field: commlog_id
      
      - name: patient_id
        description: >
          Foreign key to the patient profile. Identifies which patient
          this communication is associated with.
        tests:
          - not_null
          - relationships:
              to: ref('int_patient_profile')
              field: patient_id
      
      - name: user_id
        description: >
          Foreign key to the user record. Identifies which staff member
          initiated or received the communication. Note: user_id = 0 represents
          system-generated communications.
        tests:
          - relationships:
              to: ref('stg_opendental__userod')
              field: user_id
              where: "user_id != 0"
      
      - name: communication_datetime
        description: >
          Timestamp when the communication occurred. For outbound communications,
          this represents when the message was sent. For inbound, when it was received.
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2020-01-01'"
              max_value: "'{{ var('max_valid_date', 'current_date') }}'"
      
      - name: communication_end_datetime
        description: >
          Timestamp when the communication ended (optional). Particularly relevant
          for phone calls or multi-message conversations.
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2020-01-01'"
              max_value: "'{{ var('max_valid_date', 'current_date') }}'"
              where: "communication_end_datetime > '0001-01-01'"
      
      - name: communication_type
        description: >
          The type of communication (e.g., PhoneCall, Email, Text, Mail).
          Maintained from the source system's categorization.
      
      - name: communication_mode
        description: >
          The mode or channel used for communication. Maps from the source
          system's "mode" field.
      
      - name: direction
        description: >
          Indicates the direction of the communication. Can be outbound (from practice to patient),
          inbound (from patient to practice), system (automated system message), or unknown.
          Derived from the is_sent flag.
        tests:
          - not_null
          - accepted_values:
              values: ['outbound', 'inbound', 'system', 'unknown']
      
      - name: subject
        description: >
          Subject line or title of the communication. May be null for communications
          without a formal subject (e.g., phone calls).
      
      - name: content
        description: >
          The full content or notes from the communication. Contains the actual
          message text or call notes.
        tests:
          - not_null
      
      - name: linked_appointment_id
        description: >
          Foreign key to appointment record if the communication references
          a specific appointment. Extracted from content using regex pattern matching.
        tests:
          - relationships:
              to: ref('stg_opendental__appointment')
              field: appointment_id
              where: "linked_appointment_id is not null"
      
      - name: linked_claim_id
        description: >
          Foreign key to claim record if the communication references
          a specific insurance claim. Extracted from content using regex pattern matching.
        tests:
          - relationships:
              to: ref('stg_opendental__claim')
              field: claim_id
              where: "linked_claim_id is not null"
      
      - name: linked_procedure_id
        description: >
          Foreign key to procedure record if the communication references
          a specific dental procedure. Extracted from content using regex pattern matching.
        tests:
          - relationships:
              to: ref('stg_opendental__procedurelog')
              field: procedure_id
              where: "linked_procedure_id is not null"
      
      - name: contact_phone_number
        description: >
          Phone number extracted from the communication note, typically in format "Number XXXXXXXXXX".
          Extracted via regex pattern matching from the content when phone numbers are mentioned.
          Format is a 10-digit string without formatting characters.
        tests:
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 10
              max_value: 10
              where: "contact_phone_number is not null"
      
      - name: communication_category
        description: >
          Basic categorization of the communication based on content analysis.
          Possible values: appointment, billing, clinical, insurance, follow_up, general.
        tests:
          - not_null
          - accepted_values:
              values: ['appointment', 'billing', 'clinical', 'insurance', 'follow_up', 'general']
      
      - name: outcome
        description: >
          The result or outcome of the communication, derived from content analysis.
          Possible values: confirmed, rescheduled, cancelled, no_answer, completed.
        tests:
          - not_null
          - accepted_values:
              values: ['confirmed', 'rescheduled', 'cancelled', 'no_answer', 'completed']
      
      - name: follow_up_required
        description: >
          Boolean flag indicating whether this communication requires follow-up action.
          Determined through content analysis looking for follow-up related keywords.
        tests:
          - not_null
      
      - name: follow_up_date
        description: >
          Date when follow-up action should be taken. Defaults to 7 days from communication
          if follow-up is required but no specific date is mentioned.
      
      - name: follow_up_task_id
        description: >
          Foreign key to task record if a follow-up task was created.
          Currently not implemented but reserved for future task integration.
      
      - name: program_id
        description: >
          Identifier for the program or system that generated the communication.
          Used for tracking automated communications.
      
      - name: patient_name
        description: >
          Patient's preferred name, joined from int_patient_profile.
        tests:
          - not_null
      
      - name: patient_status
        description: >
          Current status of the patient, joined from int_patient_profile.
        tests:
          - not_null
      
      - name: birth_date
        description: >
          Patient's date of birth, joined from int_patient_profile.
        tests:
          - not_null
      
      - name: first_visit_date
        description: >
          Date of patient's first visit to the practice, joined from int_patient_profile.
      
      - name: last_visit_date
        description: >
          Date of patient's most recent completed visit, derived from both current
          and historical appointment data.
      
      - name: user_name
        description: >
          Name of the staff member who initiated or received the communication,
          joined from stg_opendental__userod. Note: System communications (user_id = 0)
          will have NULL user_name.
        tests:
          - not_null:
              where: "user_id != 0"
      
      - name: provider_id
        description: >
          Provider ID associated with the user, if applicable. Joined from 
          stg_opendental__userod for provider correlation.
          
          Note: provider_id = 0 represents system-generated communications:
          - Type 603: Tertiary communication system (mode 5)
          - Type 224: Primary appointment notification system (mode 1,4)
          - Type 228: Secondary automated communication system (mode 4)
          - Type 0: Legacy system communications (mode 5)
        tests:
          - relationships:
              to: ref('stg_opendental__provider')
              field: provider_id
              where: "provider_id is not null AND provider_id != 0"
      
      - name: created_at
        description: >
          Timestamp when the record was created in the source system.
        tests:
          - not_null
      
      - name: updated_at
        description: >
          Timestamp when the record was last updated in the source system.
        tests:
          - not_null
      
      - name: model_created_at
        description: >
          Timestamp when the record was created in this model.
        tests:
          - not_null
      
      - name: model_updated_at
        description: >
          Timestamp when the record was last updated in this model.
        tests:
          - not_null

    tests:
      # Validates that user_name column is populated whenever user_id column has a value
      # Excludes system communications (user_id = 0) which are allowed to have NULL user_name
      - dbt_utils.expression_is_true:
          expression: "user_id = 0 or (user_id is not null and user_name is not null)"

    meta:
      business_owners: ["dental_communications_team", "patient_care_team"]
      technical_owners: ["data_engineering_team"]
      refresh_frequency: "daily"
      contains_pii: true
      data_quality_requirements:
        - "All communications must be associated with a valid patient"
        - "Communication categories must accurately reflect content"
        - "Direction must be correctly determined from is_sent flag"
        - "All dates must be valid and chronological"
        - "Linked entities (appointments, claims, procedures) must be valid"
        - "Regular expression pattern extraction must detect valid entity IDs"
        - "Content analysis for categorization must be accurate and consistent"
        - "Follow-up tracking must accurately reflect communication requirements"
        - "Last visit date must be the most recent valid completed visit"
        - "Future incremental loading must only process new communications"