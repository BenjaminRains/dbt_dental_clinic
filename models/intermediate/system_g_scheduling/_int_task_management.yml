version: 2

models:
  - name: int_task_management
    description: >
      Comprehensive task management model that provides a complete view of tasks, their history,
      and associated metadata. This model serves as the foundation for task tracking, workflow
      management, and appointment-related task integration in the dental clinic.
      
      Key features:
      - Aggregates task data with task lists and history
      - Tracks task status and changes over time
      - Manages task subscriptions and notifications
      - Integrates with appointment scheduling system
      - Supports task prioritization and triage
      - Enables task list organization
      - Tracks task completion and deadlines
      - Manages task notes and communications
      - Supports task assignment and ownership
      - Provides comprehensive task history
      
      Task Lists:
      - Current task lists (as of Dec 2023):
        * Clinical: URGENT, Unscheduled Treatment F/U, Pre-Treatment F/U, Treatment Plans
        * Staff-specific: Liz, Chelsea, Katie
        * Special purpose: Patient Balance F/U, NP Insurance, X-rays, DOCTOR URGENT
        * Other: Same day HYG, Appt Cancellations, $$$ TX FOLLOWUP
      - Historical task lists (pre-Dec 2023) may have different IDs
      - task_list_id = 0 indicates no assigned list
      
      Data Sources:
      - stg_opendental__task: Base task data
      - stg_opendental__tasklist: Task list information
      - stg_opendental__taskhist: Task history records
      - stg_opendental__tasknote: Task notes
      - stg_opendental__tasksubscription: Task subscriptions
      - stg_opendental__taskunread: Task unread status
      - stg_opendental__appointment: Appointment data for task integration
      
      Business rules:
      - One record per task
      - Task completion time must be after creation time
      - Last edit time must be after original creation time
      - Task lists must have valid parent-child relationships
      - Task history must maintain chronological order
      - Task notes must be associated with valid tasks
      - Task subscriptions must reference valid users
      - Unread status must reference valid users
      - Appointment tasks must reference valid appointments
      - Task priorities must be valid
      - Task triage categories must be valid
      - Required fields must not be null
      - Timestamps must be in chronological order
      
      Grain:
      - One record per task (task_id)
      - Latest history record for each task
      - Latest note for each task
      - Current subscription status
      - Current unread status
      - Incremental updates based on last_edit_timestamp
      
    config:
      materialized: incremental
      schema: intermediate
      unique_key: task_id

    columns:
      - name: task_id
        description: Unique identifier for the task
        tests:
          - unique
          - not_null
      - name: task_list_id
        description: ID of the task list this task belongs to
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__tasklist')
              field: task_id
              config:
                severity: warn
      - name: key_id
        description: Reference ID for the associated entity (e.g., appointment_id)
      - name: from_id
        description: ID of the entity that created the task
      - name: assigned_user_id
        description: ID of the user assigned to the task
        tests:
          - relationships:
              to: ref('stg_opendental__user')
              field: user_id
      - name: priority_def_id
        description: ID of the priority definition
      - name: triage_category_id
        description: ID of the triage category
      - name: task_date
        description: >
          Date when the task is due. Can be null for certain recurring tasks where entry_timestamp 
          serves as the due date. This is common for:
          - Patient Balance F/U tasks (task_list_id = 29) which follow monthly patterns
          - Treatment Plans tasks (task_list_id = 47) which are scheduled in advance
          In these cases, the entry_timestamp represents the future date when the task should be completed.
      - name: entry_timestamp
        description: When the task was created
        tests:
          - not_null
      - name: finished_timestamp
        description: When the task was completed
        tests:
          - dbt_utils.expression_is_true:
              expression: "finished_timestamp IS NULL OR finished_timestamp >= entry_timestamp"
      - name: original_timestamp
        description: Original creation timestamp
        tests:
          - not_null
      - name: last_edit_timestamp
        description: Last modification timestamp
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= original_timestamp"
              column_name: last_edit_timestamp
              where: "last_edit_timestamp IS NOT NULL"
              name: last_edit_after_original
      
      # Task List Information
      - name: task_list_description
        description: Description of the task list
      - name: parent_task_list_id
        description: ID of the parent task list
      - name: task_list_date
        description: Date associated with the task list
      - name: is_repeating
        description: >
          Whether the task list repeats. Can be null for historical tasks from pre-Dec 2023
          task lists (IDs 0, 8, 12, 14, 20, 21) which used a different data structure.
      - name: date_type
        description: Type of date for the task list
      - name: task_list_from_id
        description: ID of the entity that created the task list
      - name: object_type
        description: Type of object associated with the task list
      - name: task_list_entry_datetime
        description: When the task list was created
      - name: global_task_filter_type
        description: Type of global filter for the task list
      - name: task_list_status
        description: Status of the task list
      
      # Latest Task History
      - name: latest_history_id
        description: ID of the latest history record
      - name: latest_history_timestamp
        description: Timestamp of the latest history record
      - name: latest_task_status
        description: Latest status of the task
      - name: latest_description
        description: Latest description of the task
      - name: latest_is_repeating
        description: Latest repeating status
      - name: latest_date_type
        description: Latest date type
      - name: latest_object_type
        description: Latest object type
      - name: latest_entry_datetime
        description: Latest entry datetime
      - name: latest_finished_datetime
        description: Latest finished datetime
      - name: reminder_group_id
        description: ID of the reminder group
      - name: reminder_type
        description: Type of reminder
      - name: reminder_frequency
        description: Frequency of reminders
      - name: latest_original_datetime
        description: Latest original datetime
      - name: latest_description_override
        description: Latest description override
      - name: latest_is_read_only
        description: Latest read-only status
      
      # Latest Task Note
      - name: latest_note_id
        description: ID of the latest note
      - name: latest_note_datetime
        description: Timestamp of the latest note
      - name: latest_note
        description: Content of the latest note
      
      # Subscription Information
      - name: task_subscription_id
        description: ID of the task subscription
      - name: subscriber_user_id
        description: ID of the subscribing user
      
      # Unread Status
      - name: task_unread_ids
        description: Array of task unread record IDs for this task
      - name: unread_user_ids
        description: Array of user IDs who haven't read this task 