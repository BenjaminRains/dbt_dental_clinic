version: 2

models:
  - name: int_claim_details
    description: >
      Core insurance claim information combining claim details, procedures, and insurance coverage.
      This model consolidates data from multiple sources to provide a comprehensive view of insurance claims.
      
      Key features:
      - Combines claim, procedure, and insurance coverage information
      - Includes detailed procedure code information
      - Tracks financial aspects of claims (billed, allowed, paid amounts)
      - Maintains insurance plan and coverage details
      - Preserves procedure-specific flags and metadata
      
      Data format notes:
      - Procedure codes can be either CDT format (D-prefixed) or numeric format (e.g., "01354", "02920")
      - The code_prefix field will extract the prefix for D-prefixed codes only (e.g., "D1", "D2")
      - Numeric procedure codes will have NULL values for code_prefix
      - Common numeric codes include "02920" (Recement Crown), "01354" (SDF treatment), and "09940" (Occlusal Guard)
      
      Numeric procedure codes appear in various categories:
      - Many numeric codes in category 622 are dental procedures similar to CDT codes
      - Category 250 contains mostly administrative codes, supply items, and patient instructions
      - Categories 73-85 are often used for clinical notes and specialized procedure types
      - Special categories like 251 (prosthetics) and 540 (root procedures) exist for specific treatments
      - Some codes start with special characters (e.g., ~GRP~, *NPA) for internal categorization
      
      Data Sources:
      - stg_opendental__claim: Base claim information
      - stg_opendental__claimproc: Claim procedure details
      - stg_opendental__procedurelog: Procedure information
      - stg_opendental__procedurecode: Procedure code details
      - int_insurance_coverage: Insurance plan and coverage information
    
    config:
      materialized: table
      schema: intermediate
      unique_key: [claim_id, procedure_id, claim_procedure_id]  # Composite key to handle multiple procedures per claim
    
    columns:
      - name: claim_id
        description: Primary key part 1 - the insurance claim identifier
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__claim')
              field: claim_id

      - name: procedure_id
        description: Primary key part 2 - the procedure identifier within the claim
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__procedurelog')
              field: procedure_id

      - name: claim_procedure_id
        description: Primary key part 3 - the claim procedure identifier
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__claimproc')
              field: claim_procedure_id

      - name: patient_id
        description: Foreign key to the patient
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__patient')
              field: patient_id

      - name: insurance_plan_id
        description: Foreign key to the insurance plan
        tests:
          - not_null:
              where: "claim_type = 'P' and verification_status = true and claim_status not in ('H', 'W')"
          - relationships:
              to: ref('int_insurance_coverage')
              field: insurance_plan_id

      - name: carrier_id
        description: Foreign key to the insurance carrier
        tests:
          - not_null:
              where: "claim_type = 'P' and verification_status = true and claim_status not in ('H', 'W')"
          - relationships:
              to: ref('stg_opendental__carrier')
              field: carrier_id

      - name: subscriber_id
        description: Foreign key to the insurance subscriber
        tests:
          - not_null:
              where: "claim_type = 'P' and verification_status = true and claim_status not in ('H', 'W')"
          - relationships:
              to: ref('stg_opendental__inssub')
              field: subscriber_id

      - name: claim_status
        description: Current status of the insurance claim
        tests:
          - not_null

      - name: claim_type
        description: Type of claim (e.g., primary, secondary)
        tests:
          - not_null

      - name: claim_date
        description: Date when the claim was created
        tests:
          - not_null

      - name: procedure_code
        description: ADA procedure code
        tests:
          - not_null

      - name: code_prefix
        description: >
          Prefix of the procedure code (e.g., "D1", "D2") extracted from D-prefixed CDT codes.
          Will be NULL for numeric procedure codes (e.g., "01354", "02920") which are valid
          but don't follow the CDT format.
        tests:
          - not_null:
              where: "procedure_code LIKE 'D%'"

      - name: procedure_description
        description: Full description of the procedure
        tests:
          - not_null

      - name: abbreviated_description
        description: Short description of the procedure

      - name: procedure_time
        description: Estimated time for the procedure

      - name: procedure_category_id
        description: Category identifier for the procedure

      - name: treatment_area
        description: Area of treatment for the procedure

      - name: is_prosthetic_flag
        description: Flag indicating if the procedure is prosthetic
        tests:
          - accepted_values:
              values: [0, 1]

      - name: is_hygiene_flag
        description: Flag indicating if the procedure is hygiene-related
        tests:
          - accepted_values:
              values: [0, 1]

      - name: base_units
        description: Base units for the procedure

      - name: is_radiology_flag
        description: Flag indicating if the procedure is radiology-related
        tests:
          - accepted_values:
              values: [0, 1]

      - name: no_bill_insurance_flag
        description: Flag indicating if the procedure should not be billed to insurance
        tests:
          - accepted_values:
              values: [0, 1]

      - name: default_claim_note
        description: Default note for insurance claims

      - name: medical_code
        description: Medical code associated with the procedure

      - name: diagnostic_codes
        description: Diagnostic codes associated with the procedure

      - name: billed_amount
        description: Amount billed to insurance
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000

      - name: allowed_amount
        description: Amount allowed by insurance
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              row_condition: "allowed_amount != -1.0"  # Exclude placeholder values

      - name: paid_amount
        description: Amount paid by insurance
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -10.0
              max_value: 10000
              row_condition: "insurance_plan_id is not null"  # Only apply to insured claims

      - name: write_off_amount
        description: Amount written off
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000

      - name: patient_responsibility
        description: Amount patient is responsible for
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10000
              row_condition: "patient_responsibility != -1.0"  # Exclude placeholder values

      - name: plan_type
        description: Type of insurance plan (e.g., PPO, HMO)

      - name: group_number
        description: Insurance group number

      - name: group_name
        description: Insurance group name

      - name: verification_status
        description: Whether the insurance is currently active
        tests:
          - accepted_values:
              values: [true, false]

      - name: verification_date
        description: Date of last insurance verification

      - name: benefit_details
        description: JSON containing benefit details

      - name: effective_date
        description: Date when the insurance coverage became effective

      - name: termination_date
        description: Date when the insurance coverage was terminated (if applicable)

      - name: created_at
        description: Timestamp when the claim was created
        tests:
          - not_null

      - name: updated_at
        description: Timestamp when the claim was last updated
        tests:
          - not_null

    tests:
      - dbt_expectations.expect_table_row_count_to_be_between:
          min_value: 1000
          max_value: 100000

      - dbt_utils.expression_is_true:
          expression: "billed_amount >= paid_amount + write_off_amount + patient_responsibility"
          severity: warn
          name: warn_inconsistent_financial_totals

      - dbt_utils.expression_is_true:
          expression: "not (verification_status = true and verification_date is null)"
          severity: warn
          name: warn_missing_verification_date

      - dbt_utils.expression_is_true:
          expression: "not (claim_type = 'P' and insurance_plan_id is null)"
          severity: warn
          name: warn_missing_insurance_plan

      - dbt_utils.expression_is_true:
          expression: "not (is_radiology_flag = 1 and no_bill_insurance_flag = 1)"
          severity: warn
          name: warn_radiology_no_bill_conflict 

      - dbt_utils.expression_is_true:
          expression: >
            NOT EXISTS (
              SELECT 1
              FROM (
                SELECT 
                  claim_id,
                  procedure_id,
                  claim_procedure_id,
                  COUNT(*) as duplicate_count
                FROM {{ ref('int_claim_details') }}
                GROUP BY 
                  claim_id,
                  procedure_id,
                  claim_procedure_id
                HAVING COUNT(*) > 1
              ) as duplicates
            )
          config:
            severity: error
            name: check_no_duplicate_claim_procedures
            description: >
              This test verifies that there are no duplicate (claim_id, procedure_id, claim_procedure_id) combinations
              in the int_claim_details model. Each claim procedure should appear exactly once.  