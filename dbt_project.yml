# yaml-language-server: $schema=https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/dbt_project.json
name: 'dbt_dental_clinic'
version: '1.0.0'
config-version: 2

# Make sure this matches exactly what's in your profiles.yml
profile: 'dbt_dental_clinic'

# Paths configuration
model-paths: ["models"]
# Comment out analysis-paths. these scripts are for EDA. 
# analysis-paths: ["analysis"] 
# analysis_intermediate-paths: ["analysis_intermediate"]
test-paths: ["tests"]
macro-paths: ["macros"]
seed-paths: ["seeds"]
docs-paths: ["dbt_docs"]

# Build artifacts location
target-path: "target"
clean-targets:
    - "target"
    - "dbt_packages"

# Database/schema configuration
models:
  dbt_dental_clinic:
    # PostgreSQL-specific configuration
    +persist_docs:
      relation: true  # PostgreSQL supports persisting relation docs
      columns: true   # PostgreSQL supports persisting column docs
    
    # Configure materializations by folder
    staging:
      +materialized: view  # Default materialization, some models override this to be tables
      +schema: public_staging  # Optional: organize models in different schemas
      +description: "Staging models for raw data transformation"
    
    intermediate:
      +materialized: table
      +schema: public_intermediate
      +description: "Intermediate models for business logic implementation"
    
    marts:
      +materialized: table
      +schema: marts
      +description: "Mart models for business reporting and analytics"

    raw:
      +materialized: table
      +schema: raw
      +description: "Raw ingested and ETL tracking tables"

    public:
      +materialized: table  # or view, as needed
      +schema: public
      +description: "Models and views for public schema (shared or BI outputs)"

# Add vars for flexible configuration
vars:
  # Set a variable for your dental practice database name
  dental_database: opendental_analytics
  # Set maximum valid date for data validation (can be overridden by environment variable)
  max_valid_date: "{{ env_var('MAX_VALID_DATE', '2099-12-31') }}"
  schedule_window_days: 90  # Number of days to look back for scheduling data

# Package dependencies
packages:
  - package: dbt-labs/dbt_utils
    version: 1.3.0
  - package: dbt-labs/dbt_expectations
    version: 0.10.8
  - package: godatadriven/dbt_date
    version: 0.12.0
  - package: dbt-labs/audit_helper
    version: 0.12.1