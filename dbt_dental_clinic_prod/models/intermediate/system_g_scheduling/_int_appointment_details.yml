version: 2

models:
  - name: int_appointment_details
    description: >
      Comprehensive appointment details model that provides a complete view of all appointments
      and their associated metadata. This model serves as the foundation for scheduling analysis
      and reporting, providing detailed information about appointments, patients, and providers.
      
      Key Features:
      - Appointment duration calculations using OpenDental pattern format
      - Actual length calculation based on check-in/check-out times with business hours logic
      - Waiting time calculation for patient experience tracking
      - Status standardization and business rule validation
      - Historical appointment tracking for rescheduling and cancellations
      - Comprehensive provider and patient information integration
      
      Data Sources:
      - stg_opendental__appointment: Base appointment data with timing and status information
      - stg_opendental__appointmenttype: Appointment type definitions and duration patterns
      - stg_opendental__provider: Provider details including specialty and color coding
      - stg_opendental__patient: Patient information including demographics and status
      - stg_opendental__histappointment: Historical appointment data for tracking changes
      
      Business Logic Features:
      - Pattern-based duration calculation using OpenDental's character-based system
      - Business hours calculation excluding Sundays and non-business hours
      - Status code standardization with descriptive text mappings
      - Historical appointment processing with latest change tracking
      - Data quality validation for placeholder times and invalid data
      
      Data Quality Notes:
      - Handles placeholder times (00:00:00) in check-in/check-out data by excluding from calculations
      - Validates appointment end time is after start time through business rules
      - Ensures actual length calculations account for business hours only (9:00-17:00, Mon-Sat)
      - Manages missing or invalid appointment type data (type_id = 0) gracefully
      - Excludes invalid historical records and maintains referential integrity
      
      Performance Notes:
      - Incremental materialization based on appointment_datetime for efficient processing
      - Complex business hours calculation optimized with recursive CTE structure
      - Indexed on key lookup fields (appointment_id, patient_id, provider_id) for downstream performance
      - Organized CTE structure following complex model patterns for maintainability
      
    config:
      materialized: incremental
      schema: intermediate
      unique_key: appointment_id
      
    meta:
      owner: "Scheduling Team"
      contains_pii: true
      business_process: "Appointment Management"
      refresh_frequency: "Daily"
      business_impact: "High"
      system_integration: "System G: Scheduling"
      data_quality_requirements:
        - "Appointment timing data must be accurate for scheduling optimization"
        - "Patient and provider information must be complete for operational reporting"
        - "Historical appointment data must be preserved for audit and analysis"
      performance_requirements:
        - "Model must process incremental updates efficiently for daily operations"
        - "Complex business hours calculations must complete within acceptable time limits"

    columns:
      - name: appointment_id
        description: >
          Primary key - Unique identifier for the appointment
          
          Business Rules:
          - Must be unique across all appointments
          - Cannot be null or zero
          - Must correspond to a valid appointment in the source system
        tests:
          - unique
          - not_null
          - relationships:
              to: ref('stg_opendental__appointment')
              field: appointment_id
      - name: patient_id
        description: >
          Foreign key to stg_opendental__patient - Links appointment to patient record
          
          Business Rules:
          - Must reference a valid patient in the system
          - Cannot be null for scheduled appointments
          
          Data Quality Notes:
          - Historical appointments may have invalid patient references
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__patient')
              field: patient_id
              severity: warn
              where: "patient_id != 0"
      - name: provider_id
        description: ID of the provider assigned to this appointment
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__provider')
              field: provider_id
      - name: appointment_datetime
        description: Date and time of the appointment
        tests:
          - not_null
      - name: appointment_end_datetime
        description: Expected end date and time of the appointment
        tests:
          - not_null
      - name: appointment_type_id
        description: |
          Foreign key to appointment type. If appointment_type_id = 0, this means the appointment 
          type is 'None' (a valid appointment that hasn't had any details appended to it yet).
        tests:
          - relationships:
              to: ref('stg_opendental__appointmenttype')
              field: appointment_type_id
      - name: appointment_type_name
        description: Name of the appointment type
      - name: appointment_length
        description: Duration of the appointment in minutes
      - name: appointment_status
        description: Status code of the appointment
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8]
      - name: appointment_status_desc
        description: Description of the appointment status
        tests:
          - not_null
          - accepted_values:
              values: ['Scheduled', 'Complete', 'UnschedList', 'ASAP', 'Broken', 'Planned', 'PtNote', 'PtNoteCompleted', 'Unknown']
      - name: is_confirmed
        description: Flag indicating if the appointment is confirmed
        tests:
          - not_null
      - name: is_complete
        description: >
          Flag indicating if the appointment is complete
          
          Logic:
          - true when: appointment_status = 2 (Complete)
          - false when: appointment_status is any other value
          
          Business Impact:
          - Used for completion rate calculations in scheduling metrics
          - Critical for operational reporting and provider performance tracking
          - Determines whether appointment should be included in completed appointment counts
        tests:
          - not_null
          - accepted_values:
              values: [true, false]
      - name: is_hygiene
        description: Flag indicating if the appointment is for hygiene
        tests:
          - not_null
      - name: is_new_patient
        description: Flag indicating if this is a new patient appointment
        tests:
          - not_null
      - name: note
        description: Appointment notes
      - name: operatory
        description: Operatory assigned to this appointment
      - name: check_in_time
        description: Time when patient checked in
      - name: check_out_time
        description: Time when patient checked out
      - name: actual_length
        description: >
          Actual duration of the appointment in minutes based on check-in/check-out times
          
          Calculation Logic:
          - Calculated only when both check-in and check-out times are valid (not 00:00:00)
          - Uses business hours calculation excluding Sundays and non-business hours (9:00-17:00)
          - Accounts for multi-day appointments spanning multiple business days
          - Returns null when timing data is invalid or missing
          
          Business Rules:
          - Must be positive when calculated
          - Cannot exceed 480 minutes (8 hours) per business day
          - Only calculated for appointments with valid check-in/check-out data
          
          Data Quality Notes:
          - May be null for appointments without valid timing data
          - Excludes placeholder times (00:00:00) from calculations
        tests:
          - dbt_utils.expression_is_true:
              expression: "actual_length IS NULL OR actual_length > 0"
              config:
                description: "Actual length must be positive when calculated"
          - dbt_utils.expression_is_true:
              expression: "actual_length IS NULL OR actual_length <= 480"
              config:
                description: "Actual length cannot exceed 8 hours per day"
      - name: waiting_time
        description: Time patient spent waiting (in minutes)
      - name: cancellation_reason
        description: Reason for cancellation (if applicable)
      - name: rescheduled_appointment_id
        description: ID of the rescheduled appointment (if applicable)
      - name: provider_name
        description: Abbreviated name of the provider
        tests:
          - not_null
      - name: provider_specialty
        description: Specialty of the provider
      - name: provider_color
        description: Color code for the provider
      - name: patient_name
        description: Preferred name of the patient
        tests:
          - not_null
      - name: patient_status
        description: Status of the patient
      - name: first_visit_date
        description: Date of patient's first visit
      - name: created_at
        description: Timestamp when this appointment was created
        tests:
          - not_null
      - name: updated_at
        description: Timestamp when this appointment was last updated
        tests:
          - not_null
      - name: model_created_at
        description: Timestamp when this record was created in the dbt model
        tests:
          - not_null
      - name: model_updated_at
        description: Timestamp when this record was last updated in the dbt model
        tests:
          - not_null

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - appointment_id
            - appointment_datetime
      # Test for appointment_end_datetime > appointment_datetime
      - dbt_utils.expression_is_true:
          expression: "appointment_end_datetime > appointment_datetime"
      # Test for valid check-in/check-out time combinations
      - dbt_utils.expression_is_true:
          expression: "check_out_time IS NULL OR check_out_time::time = '00:00:00'::time OR check_in_time::time = '00:00:00'::time OR DATE(check_out_time) = DATE(check_in_time) OR (DATE(check_out_time) > DATE(check_in_time) AND actual_length <= 480 * (DATE(check_out_time) - DATE(check_in_time) + 1))"
      # Test for actual_length > 0
      - dbt_utils.expression_is_true:
          expression: "actual_length IS NULL OR actual_length > 0"
      # Test for waiting_time >= 0
      - dbt_utils.expression_is_true:
          expression: "waiting_time IS NULL OR waiting_time >= 0"
      # Test for cancellation_reason only present for cancelled appointments
      - dbt_utils.expression_is_true:
          expression: "cancellation_reason IS NULL OR appointment_status = 5"
      # Test for rescheduled_appointment_id != appointment_id
      - dbt_utils.expression_is_true:
          expression: "rescheduled_appointment_id IS NULL OR rescheduled_appointment_id != appointment_id"
