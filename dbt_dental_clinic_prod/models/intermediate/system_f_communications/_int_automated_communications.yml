version: 2

models:
  - name: int_automated_communications_simple
    description: >
      Simplified intermediate model for automated communications that provides core
      functionality without complex template matching. This model serves as a fast,
      reliable foundation for automated communication analysis.
      
      Grain: One row per automated communication event.
      Each record represents a single automated communication with engagement metrics
      and proper metadata preservation.
      
      Key Features:
      - Core automated communication identification and tracking
      - Engagement metrics aggregation (opens, clicks, replies, bounces)
      - Patient and user context integration
      - Metadata preservation for data lineage
      - Fast, reliable build performance
      
      Business Logic Features:
      - Automated Communication Identification: Links flags to base communications
      - Engagement Tracking: Aggregates opens, clicks, replies, and bounces
      - Metadata Preservation: Maintains complete data lineage from primary source
      
      Data Sources:
      - int_automated_communication_flags: Primary source for automation flags and metrics
      - int_patient_communications_base: Secondary source for communication details
      
      Data Quality Notes:
      - Filters to only automated communications (is_automated = true)
      - Preserves metadata from primary source for data lineage tracking
      - Limited to 2023+ data for performance optimization
      - Template fields are NULL (handled in separate model)
      
      Performance Notes:
      - Simple INNER JOIN for fast processing
      - Limited data scope for initial build
      - No complex template matching or trigram calculations
      - Expected build time: 1-3 minutes
      
    config:
      materialized: table
      schema: intermediate
      unique_key: automated_communication_id
      on_schema_change: fail
    
    columns:
      - name: automated_communication_id
        description: >
          Primary key - Unique identifier for automated communication tracking.
          Generated from communication_id and content to ensure uniqueness.
          
          Business Rules:
          - Must be unique across all automated communications
          - Links back to the base communications model
          - Used for deduplication and incremental processing
        tests:
          - unique
          - not_null
          - relationships:
              to: ref('int_automated_communication_flags')
              field: automated_communication_id
      
      - name: communication_id
        description: >
          Foreign key to the base communication record. Identifies the specific
          communication that has been flagged as automated.
          
          Business Rules:
          - Must reference a valid communication in the base model
          - Used for linking to detailed communication information
          - Critical for audit trail and data lineage
        tests:
          - not_null
          - relationships:
              to: ref('int_patient_communications_base')
              field: communication_id
      
      - name: patient_id
        description: >
          Foreign key to the patient profile. Identifies which patient
          this automated communication is associated with.
          
          Business Rules:
          - Must reference a valid patient in the system
          - Used for patient-specific communication analysis
          - Critical for HIPAA compliance and audit trails
        tests:
          - not_null
          - relationships:
              to: ref('int_patient_profile')
              field: patient_id
              severity: warn
              config:
                description: "Patient should exist in profile, but some may be missing due to data timing"
      
      - name: user_id
        description: >
          Foreign key to the user record. Identifies which staff member
          initiated the automated communication. Note: user_id = 0 represents
          system-generated communications.
          
          Business Rules:
          - Links to staff member who initiated the communication
          - System communications (user_id = 0) are valid
          - Used for accountability and audit trail
        tests:
          - relationships:
              to: ref('stg_opendental__userod')
              field: user_id
              where: "user_id != 0"
      
      - name: communication_datetime
        description: >
          Timestamp when the automated communication occurred. For outbound
          communications, this represents when the message was sent.
          
          Business Rules:
          - Must be a valid timestamp
          - Future dates are valid for scheduled automated communications
          - Used for incremental processing and temporal analysis
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: '2023-01-01'
              max_value: '2030-12-31'
              config:
                severity: warn
                description: "Communications should be from 2023 onwards"
      
      - name: communication_type
        description: >
          Type of communication (appointment, billing, clinical, etc.).
          
          Business Rules:
          - Must be a valid communication type
          - Used for categorizing automated communications
          - Supports business process analysis
        tests:
          - not_null
      
      - name: communication_mode
        description: >
          Mode of communication (email, text, phone, etc.).
          
          Business Rules:
          - manual_note: Email communications (mode = 1)
          - text_message: Text message communications (mode = 4, 5)
          - phone_call: Phone communications (mode = 3)
          - system_note: System-generated notes (mode = 0)
          - other: Various other communication types (mode = 2, 6, 8)
          - unknown: Unrecognized mode values
        tests:
          - not_null
          - accepted_values:
              values: ['system_note', 'manual_note', 'other', 'phone_call', 'text_message', 'unknown']
      
      - name: content
        description: >
          Content of the automated communication message.
          
          Business Rules:
          - May contain template placeholders
          - Used for content analysis
          - Critical for communication identification
        tests:
          - not_null
      
      - name: linked_appointment_id
        description: >
          Foreign key to appointment if the communication is appointment-related.
          Extracted from communication content using regex patterns.
          
          Business Rules:
          - May be NULL for non-appointment communications
          - Extracted using regex pattern matching
          - Used for appointment-specific analysis
        tests:
          - relationships:
              to: ref('stg_opendental__appointment')
              field: appointment_id
              where: "linked_appointment_id IS NOT NULL"
      
      - name: linked_claim_id
        description: >
          Foreign key to claim if the communication is claim-related.
          Extracted from communication content using regex patterns.
          
          Business Rules:
          - May be NULL for non-claim communications
          - Extracted using regex pattern matching
          - Used for claim-specific analysis
        tests:
          - relationships:
              to: ref('stg_opendental__claim')
              field: claim_id
              where: "linked_claim_id IS NOT NULL"
      
      - name: linked_procedure_id
        description: >
          Foreign key to procedure if the communication is procedure-related.
          Extracted from communication content using regex patterns.
          
          Business Rules:
          - May be NULL for non-procedure communications
          - Extracted using regex pattern matching
          - Used for procedure-specific analysis
        tests:
          - relationships:
              to: ref('stg_opendental__procedurelog')
              field: procedure_id
              where: "linked_procedure_id IS NOT NULL"
      
      - name: contact_phone_number
        description: >
          Phone number used for the communication contact.
          
          Business Rules:
          - May be NULL for non-phone communications
          - Used for contact method analysis
          - Supports patient contact preference analysis
        tests:
          - dbt_utils.expression_is_true:
              expression: "contact_phone_number IS NULL OR LENGTH(contact_phone_number) >= 10"
              config:
                severity: warn
                description: "Phone numbers should be at least 10 digits when present"
      
      - name: communication_category
        description: >
          Category of the communication (appointment, billing, clinical, etc.).
          
          Business Rules:
          - Must be a valid category
          - Used for communication categorization
          - Supports business process analysis
        tests:
          - not_null
          - accepted_values:
              values: ['appointment', 'billing', 'clinical', 'insurance', 'follow_up', 'general', 'unknown']
      
      - name: outcome
        description: >
          Outcome of the communication (successful, failed, pending, etc.).
          
          Business Rules:
          - Must be a valid outcome
          - Used for communication effectiveness analysis
          - Supports process improvement initiatives
        tests:
          - not_null
          - accepted_values:
              values: ['successful', 'failed', 'pending', 'cancelled', 'unknown']
      
      - name: program_id
        description: >
          ID of the program that generated the automated communication.
          
          Business Rules:
          - May be NULL for some automated communications
          - Used for program-specific analysis
          - Supports automation system tracking
        tests:
          - dbt_utils.expression_is_true:
              expression: "program_id IS NULL OR program_id >= 0"
              config:
                severity: warn
                description: "Program ID should be non-negative when present"
      
      - name: patient_name
        description: >
          Name of the patient associated with this communication.
          
          Business Rules:
          - May be NULL for some records
          - Used for patient identification
          - Supports patient-specific analysis
        tests:
          - not_null:
              where: "patient_id IS NOT NULL"
      
      - name: patient_status
        description: >
          Status of the patient at the time of communication.
          
          Business Rules:
          - May be NULL for some records
          - Used for patient status analysis
          - Supports patient care analysis
        tests:
          - accepted_values:
              values: ['active', 'inactive', 'deceased', 'unknown']
              where: "patient_status IS NOT NULL"
      
      - name: birth_date
        description: >
          Birth date of the patient.
          
          Business Rules:
          - May be NULL for some records
          - Used for demographic analysis
          - Supports age-based communication analysis
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: '1900-01-01'
              max_value: '2020-12-31'
              where: "birth_date IS NOT NULL"
              config:
                severity: warn
                description: "Birth dates should be reasonable"
      
      - name: user_name
        description: >
          Name of the staff member who initiated the communication.
          
          Business Rules:
          - May be NULL for system communications (user_id = 0)
          - Used for staff accountability
          - Supports staff performance analysis
        tests:
          - not_null:
              where: "user_id != 0"
      
      - name: provider_id
        description: >
          Provider ID associated with the user, if applicable.
          
          Business Rules:
          - May be NULL for system communications
          - Used for provider-specific analysis
          - Supports provider performance analysis
        tests:
          - relationships:
              to: ref('stg_opendental__provider')
              field: provider_id
              where: "provider_id IS NOT NULL AND provider_id != 0"
      
      - name: trigger_type
        description: >
          Type of trigger that initiated the automated communication.
          
          Business Rules:
          - Must be a valid trigger type
          - Used for automation analysis
          - Supports process optimization
        tests:
          - not_null
          - accepted_values:
              values: ['appointment_reminder', 'appointment_confirmation', 'broken_appointment', 
                      'balance_notice', 'patient_response', 'preference_update', 'review_request', 
                      'form_request', 'post_op_instructions', 'annual_notification', 
                      'delivery_failure', 'other']
      
      - name: status
        description: >
          Status of the automated communication.
          
          Business Rules:
          - Must be a valid status
          - Used for communication tracking
          - Supports delivery analysis
        tests:
          - not_null
          - accepted_values:
              values: ['responded_positive', 'responded_negative', 'undelivered', 'sent']
      
      - name: open_count
        description: >
          Number of times the communication was opened.
          
          Business Rules:
          - Must be non-negative
          - Used for engagement analysis
          - Supports communication effectiveness measurement
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1
              config:
                severity: warn
                description: "Open count should typically be 0 or 1 per communication"
      
      - name: click_count
        description: >
          Number of times links in the communication were clicked.
          
          Business Rules:
          - Must be non-negative
          - Used for engagement analysis
          - Supports link effectiveness measurement
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1
              config:
                severity: warn
                description: "Click count should typically be 0 or 1 per communication"
      
      - name: reply_count
        description: >
          Number of replies received for the communication.
          
          Business Rules:
          - Must be non-negative
          - Used for engagement analysis
          - Supports response rate measurement
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1
              config:
                severity: warn
                description: "Reply count should typically be 0 or 1 per communication"
      
      - name: bounce_count
        description: >
          Number of times the communication bounced back.
          
          Business Rules:
          - Must be non-negative
          - Used for delivery analysis
          - Supports address quality measurement
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1
              config:
                severity: warn
                description: "Bounce count should typically be 0 or 1 per communication"
      
      - name: template_id
        description: >
          Foreign key to the communication template that was matched.
          
          Business Rules:
          - NULL in this simplified version
          - Template matching handled in separate model
          - Used for template effectiveness analysis
        tests:
          - dbt_utils.expression_is_true:
              expression: "template_id IS NULL"
              config:
                severity: warn
                description: "Template ID should be NULL in simplified version"
      
      - name: template_name
        description: >
          Name of the matched communication template.
          
          Business Rules:
          - NULL in this simplified version
          - Template matching handled in separate model
          - Used for template identification
        tests:
          - dbt_utils.expression_is_true:
              expression: "template_name IS NULL"
              config:
                severity: warn
                description: "Template name should be NULL in simplified version"
      
      - name: template_type
        description: >
          Type of the matched template (email, SMS, etc.).
          
          Business Rules:
          - NULL in this simplified version
          - Template matching handled in separate model
          - Used for template categorization
        tests:
          - dbt_utils.expression_is_true:
              expression: "template_type IS NULL"
              config:
                severity: warn
                description: "Template type should be NULL in simplified version"
      
      - name: template_category
        description: >
          Category of the matched template (appointment, billing, etc.).
          
          Business Rules:
          - NULL in this simplified version
          - Template matching handled in separate model
          - Used for template categorization
        tests:
          - dbt_utils.expression_is_true:
              expression: "template_category IS NULL"
              config:
                severity: warn
                description: "Template category should be NULL in simplified version"
      
      - name: template_subject
        description: >
          Subject line of the matched template.
          
          Business Rules:
          - NULL in this simplified version
          - Template matching handled in separate model
          - Used for template identification
        tests:
          - dbt_utils.expression_is_true:
              expression: "template_subject IS NULL"
              config:
                severity: warn
                description: "Template subject should be NULL in simplified version"
      
      # Metadata Fields
      - name: _loaded_at
        description: >
          ETL extraction timestamp from primary source (communication base)
          Source: int_patient_communications_base._loaded_at
          Purpose: Data lineage tracking and pipeline monitoring
          Note: Preserved from primary source for complete audit trail
        tests:
          - not_null
      
      - name: _created_at
        description: >
          Business creation timestamp from primary source (communication base)
          Source: int_patient_communications_base._created_at
          Purpose: Business timeline analysis and audit trail
          Note: Maps to DateTStamp in OpenDental source system
        tests:
          - not_null
      
      - name: _transformed_at
        description: >
          dbt intermediate model build timestamp - when this model was built
          Source: dbt model execution
          Purpose: Model-specific tracking and pipeline debugging
          Note: Generated by current_timestamp
        tests:
          - not_null
    
    tests:
      # Business Rule Tests
      - dbt_expectations.expect_table_row_count_to_be_between:
          min_value: 1
          max_value: 1000000
          config:
            severity: error
            description: "Automated communications should exist but not exceed reasonable limits"
      
      - dbt_expectations.expression_is_true:
          expression: "open_count + click_count + reply_count + bounce_count <= 4"
          config:
            severity: warn
            description: "Total engagement metrics should not exceed 4 per communication"
      
      - dbt_expectations.expression_is_true:
          expression: "communication_datetime >= '2023-01-01'"
          config:
            severity: warn
            description: "Communications should be from 2023 onwards"
      
      # Data Quality Tests
      - dbt_utils.expression_is_true:
          expression: "patient_id is not null and patient_id > 0"
          config:
            severity: error
            description: "All communications must have valid patient IDs"
      
      - dbt_utils.expression_is_true:
          expression: "automated_communication_id is not null"
          config:
            severity: error
            description: "All records must have valid automated communication IDs"
      
      # Template Field Tests (should be NULL in simplified version)
      - dbt_utils.expression_is_true:
          expression: "template_id IS NULL AND template_name IS NULL AND template_type IS NULL"
          config:
            severity: warn
            description: "Template fields should be NULL in simplified version"
    
    meta:
      owner: "dental_communications_team"
      contains_pii: true
      business_process: "Automated Communications Management"
      refresh_frequency: "daily"
      business_impact: "High"
      system_integration: "System F: Communications"
      data_quality_requirements:
        - "All automated communications must be properly identified"
        - "Engagement metrics must be accurately tracked"
        - "Metadata must be preserved for audit trails"
        - "Template fields must be NULL (handled separately)"
      performance_requirements:
        - "Model must process within 3 minutes"
        - "Simple joins for fast processing"
        - "Limited data scope for performance"
