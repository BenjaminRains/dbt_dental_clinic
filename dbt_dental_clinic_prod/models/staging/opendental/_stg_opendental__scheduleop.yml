version: 2

models:
  - name: stg_opendental__scheduleop
    description: >
      Staging model for the OpenDental scheduleop data. This table creates a link between
      the schedule entries and operatories (dental chairs/rooms), allowing a schedule to be
      associated with specific operatories. It works as a many-to-many relationship table
      between the schedule and operatory tables.
      
      This table is closely related to the stg_opendental__schedule model. While the schedule 
      table defines when providers or employees are available, this table specifies which 
      operatories are allocated during those scheduled periods.
    
    meta:
      record_count: "Varies based on number of operatory assignments"
      data_scope: "All historical and current schedule-operatory assignments"
      
      known_issues:
        - description: "No direct timestamp in source table - timestamps inherited from schedule table"
          severity: "warn"
          identified_date: "2024-03-19"
          impact: "Incremental loading relies on schedule table timestamps"
        - description: "Some schedule_op records reference non-existent schedule records"
          severity: "error"
          identified_date: "2024-03-19"
          impact: "Approximately 16,364 records have orphaned schedule_id references, primarily in the 150,000-160,000 ID range. Note: This is the inverse of a known issue in stg_opendental__schedule where 5 provider schedules are missing operatory assignments."
        - description: "Three records have null timestamps due to missing schedule records"
          severity: "warn"
          identified_date: "2024-03-19"
          impact: "These records cannot be properly tracked for changes"
      
      business_rules:
        - rule: "Each schedule entry can be associated with multiple operatories"
          impact: "Enables tracking of which rooms/chairs are available for each schedule block"
        - rule: "Operatory assignments must exist in the operatory table"
          impact: "Ensures data integrity for room/chair assignments"
        - rule: "Schedule assignments should exist in the schedule table"
          impact: "Ensures data integrity for scheduling"
      
      usage_notes: >
        - Use this table to understand which operatories are available during specific schedule blocks
        - Join with stg_opendental__schedule to get complete scheduling information
        - Join with operatory table to get room/chair details
        - Note that timestamps are inherited from the schedule table
        - Be aware of orphaned schedule records in the 150,000-160,000 ID range
        - Note that stg_opendental__schedule has a related issue where 5 provider schedules are missing operatory assignments
    
    config:
      materialized: incremental
      unique_key: schedule_op_id
    
    columns:
      - name: schedule_op_id
        description: >
          Primary key - unique identifier for each schedule-operatory association.
          Maps to ScheduleOpNum in OpenDental.
        tests:
          - unique
          - not_null
          - positive_values
          
      - name: schedule_id
        description: >
          Foreign key to the schedule table. Links this operatory assignment to a 
          specific schedule entry (provider availability, blockout, etc.).
          Maps to ScheduleNum in OpenDental.
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__schedule')
              field: schedule_id
              severity: warn  # Changed to warn due to known orphaned records

      - name: operatory_id
        description: >
          Foreign key to the operatory table. Identifies which specific dental chair/room
          is associated with this schedule entry. Maps to OperatoryNum in OpenDental.
        tests:
          - not_null
          - relationships:
              to: ref('stg_opendental__operatory')
              field: operatory_id
              severity: error

      # Metadata columns
      - name: _loaded_at
        description: "Timestamp when the data was loaded into the data warehouse by the ETL pipeline (using current_timestamp)"
        tests:
          - not_null

      - name: _transformed_at
        description: "Timestamp when this record was transformed into the data warehouse by the ETL pipeline (using current_timestamp)"
        tests:
          - not_null

      - name: _created_at
        description: >
          Timestamp when the record was created in the source system (OpenDental).
          Inherited from the related schedule record's DateTStamp.
          May be null for records where the schedule record is missing.
        tests:
          - not_null:
              where: "schedule_id NOT IN (151625, 156106, 156118, 157603, 156091, 158274, 156105, 157608, 151473, 159138, 203245, 192498, 176105)"

      - name: _updated_at
        description: >
          Timestamp when the record was last updated in the source system (OpenDental).
          Inherited from the related schedule record's DateTStamp.
          May be null for records where the schedule record is missing.
        tests:
          - not_null:
              where: "schedule_id NOT IN (151625, 156106, 156118, 157603, 156091, 158274, 156105, 157608, 151473, 159138, 203245, 192498, 176105)"
