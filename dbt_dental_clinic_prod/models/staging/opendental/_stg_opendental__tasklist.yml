version: 2

models:
  - name: stg_opendental__tasklist
    description: >
      Staging model for task list records from OpenDental. Contains information about task lists,
      which are collections of related tasks that can be assigned, tracked, and managed together.
      
      Business Context:
      - Supports hierarchical task organization (parent-child relationships)
      - Enables grouping of related tasks for efficient management
      - Can be associated with various entity types (patients, procedures, etc.)
      - Supports both one-time and repeating task lists
      - Allows global filtering of tasks within lists
      
      Data Scope:
      - Records from 2023-01-01 onwards
      - Includes all task list types and statuses
      - Captures both active and archived lists
      
      Key Relationships:
      - Links to parent task lists through parent_id
      - Links to task list creators through from_id
      - Links to various entities through object_type
      - Links to tasks through task_list_id (in task table)
      
      Important Business Rules:
      - Task lists can be hierarchical (parent-child relationships)
      - Lists can be repeating or one-time
      - Date type determines how task_date is interpreted
      - Global filters can be applied to all tasks in a list
      - Object type determines the entity type for associated tasks

    meta:
      record_count: "Approximately 500 records (as of 2024)"
      data_scope: "Task lists from 2023-01-01 onwards"
      
      known_issues:
        - description: "Some task lists may reference non-existent parent lists"
          severity: "warn"
          identified_date: "2024-01-01"
          impact: "May affect task list hierarchy analysis"
          test: "relationships_stg_opendental__tasklist_parent_id__task_list_id__ref_stg_opendental__tasklist_"
        - description: "47 task history records reference non-existent task lists, all with date_type = 0"
          severity: "warn"
          identified_date: "2024-01-01"
          impact: "May affect historical task analysis"
          test: "relationships_stg_opendental__taskhist_task_list_id__task_list_id__ref_stg_opendental__tasklist_"
        - description: "32 task records reference non-existent task lists, all with date_type = 0"
          severity: "warn"
          identified_date: "2024-01-01"
          impact: "May affect current task analysis"
          test: "relationships_stg_opendental__task_task_list_id__task_list_id__ref_stg_opendental__tasklist_"
        - description: "6 task subscription records reference non-existent task lists with future dates"
          severity: "warn"
          identified_date: "2024-01-01"
          impact: "May affect task notification system"
          test: "relationships_stg_opendental__tasksubscription_task_list_id__task_list_id__ref_stg_opendental__tasklist_"
      
      business_rules:
        - rule: "Task lists must have a valid entry_datetime"
          impact: "Ensures accurate task list creation tracking"
        - rule: "Parent-child relationships must form valid hierarchies"
          impact: "Maintains proper task list organization"
        - rule: "Repeating task lists must have valid date patterns"
          impact: "Ensures proper task list scheduling"
        - rule: "Tasks with date_type = false may reference non-existent task lists"
          impact: "Affects how undated tasks are organized"
        - rule: "Patient-related tasks are more likely to have missing task list references"
          impact: "May affect patient task tracking and analysis"
        - rule: "Future-dated task subscriptions should be reviewed for validity"
          impact: "Ensures proper task notification scheduling"
      
      usage_notes: >
        - Use parent_id to analyze task list hierarchies
        - Check is_repeating for recurring task patterns
        - Task status values: 0=New, 1=In Progress, 2=Completed
        - Date type values: false=No Date, true=Due Date
        - Object type values: 0=None, 1=Patient, 2=Procedure
        - Global task filter types affect how tasks are filtered within lists
        - Be aware that tasks with date_type = false may reference non-existent task lists
        - Patient-related tasks are more likely to have missing task list references
        - Future-dated task subscriptions should be reviewed for validity
        - Missing task list references are more common in completed tasks

    columns:
      # Primary Key
      - name: task_list_id
        description: "Primary key - unique identifier for each task list (maps to TaskListNum in OpenDental)"
        tests:
          - unique
          - not_null
          - positive_values

      # Foreign Keys
      - name: parent_id
        description: "Foreign key to parent task list (maps to Parent in OpenDental, 0 values converted to NULL)"
        tests:
          - relationships:
              to: ref('stg_opendental__tasklist')
              field: task_list_id
              severity: warn

      - name: from_id
        description: "Foreign key to the task list creator (maps to FromNum in OpenDental, 0 values converted to NULL)"
        tests:
          - relationships:
              to: ref('stg_opendental__userod')
              field: user_id
              severity: warn

      # Task List Attributes
      - name: description
        description: "Main description of the task list (maps to Descript in OpenDental)"

      - name: task_date
        description: "Date associated with the task list (maps to DateTL in OpenDental)"
        tests:
          - test_date_after:
              compare_column: "2000-01-01"
              allow_null: true

      - name: date_type
        description: "Type of date associated with the task list (maps to DateType in OpenDental)"
        tests:
          - not_null
          - accepted_values:
              values: [true, false]

      - name: object_type
        description: "Type of object the task list is associated with (maps to ObjectType in OpenDental)"
        tests:
          - not_null
          - accepted_values:
              values: [0, 1, 2]

      - name: task_status
        description: "Current status of the task list (maps to TaskListStatus in OpenDental)"
        tests:
          - not_null
          - accepted_values:
              values: [0, 1, 2]

      - name: global_task_filter_type
        description: "Type of global filter applied to the task list (maps to GlobalTaskFilterType in OpenDental)"

      # Timestamps
      - name: entry_datetime
        description: "Timestamp when the task list was created (maps to DateTimeEntry in OpenDental)"
        tests:
          - not_null

      # Boolean Flags
      - name: is_repeating
        description: "Flag indicating if the task list repeats (maps to IsRepeating in OpenDental)"
        tests:
          - not_null
          - boolean_values

      # Required Metadata Columns
      - name: _loaded_at
        description: "Timestamp when the data was loaded into the data warehouse by the ETL pipeline"
        tests:
          - not_null

      - name: _transformed_at
        description: "Timestamp when this record was transformed into the data warehouse by the ETL pipeline (using current_timestamp)"
        tests:
          - not_null

      - name: _created_at
        description: "Timestamp when the record was created in the source system (OpenDental). Maps to DateTimeEntry."
        tests:
          - not_null

      - name: _updated_at
        description: "Timestamp when the record was last updated in the source system (OpenDental). Maps to DateTimeEntry."
        tests:
          - not_null

    tests:
      - dbt_utils.expression_is_true:
          expression: "entry_datetime >= '2023-01-01'"
          name: "task_list_date_range_check"
          config:
            severity: warn
            description: "Ensures all task lists are from 2023-01-01 onwards as per business requirements"

    meta:
      relationships:
        - relationship: many_to_one
          field: parent_id
          related_to: stg_opendental__tasklist.task_list_id
          severity: warn
        - relationship: many_to_one
          field: from_id
          related_to: stg_opendental__userod.user_id
          severity: warn
