version: 2

models:
  - name: stg_opendental__schedule
    description: >
      Staging model for schedule records from OpenDental. Contains information about appointments, blockouts, and other scheduled events.
      
      This model includes:
      - All scheduled events from 2023-01-01 onwards
      - Appointments, blockouts, and other scheduled events
      - Provider and employee assignments
      - Clinic locations
      - Event status and timing information
    
    meta:
      record_count: "Approximately 15,000 records (as of 2024)"
      data_scope: "All schedule records from 2023-01-01 onwards"
      
      known_issues:
        - description: "Start and stop times are NULL for all records"
          severity: "info"
          identified_date: "2024-01-01"
          impact: "Expected behavior - times are not used in the current system"
          test: "start_time_not_null"
        
        - description: "Clinic ID is not used by MDC clinic"
          severity: "info"
          identified_date: "2024-01-01"
          impact: "All records have clinic_id = 0"
        
        - description: "5 provider schedules (type 1) missing operatory assignments"
          severity: "warn"
          identified_date: "2024-01-01"
          impact: "Minor data quality issue - 99.8% of provider schedules have operatory assignments"
      
      business_rules:
        - rule: "Schedule dates must be on or after 2023-01-01"
          impact: "Ensures data quality and performance by limiting historical data"
        
        - rule: "Schedule types have specific provider/employee patterns"
          impact: "Critical for understanding schedule assignments"
          details: >
            - Type 0: System-generated (provider_id = 0, employee_id = 0)
            - Type 1: Provider schedules (employee_id = 0)
            - Type 2: System blockouts (provider_id = 0, employee_id = 0)
            - Type 3: Employee schedules (provider_id = 0)
        
        - rule: "Operatory assignments follow type-specific patterns"
          impact: "Critical for understanding schedule locations"
          details: >
            - Type 0: No operatory assignments (system records)
            - Type 1: 99.8% have operatory assignments (13 operatories used)
            - Type 2: 100% have operatory assignments (13 operatories used)
            - Type 3: 0.5% have operatory assignments (6 operatories used)
      
      usage_notes: >
        Key considerations when using this model:
        - Schedule types have distinct patterns:
          * Type 0: System-generated records (no operatory assignments)
          * Type 1: Provider-specific schedules (99.8% have operatory assignments)
          * Type 2: System-generated blockouts (100% have operatory assignments)
          * Type 3: Employee-specific schedules (0.5% have operatory assignments)
        - Status field indicates current state of the scheduled event
        - Provider and employee assignments follow type-specific patterns
        - Start and stop times are currently NULL for all records
        - Clinic ID is not used (all records have clinic_id = 0)
        - Operatory assignments vary by schedule type
    
    config:
      materialized: incremental
      unique_key: schedule_id
    
    columns:
      - name: schedule_id
        description: "Primary key - unique identifier for each schedule record (maps to ScheduleNum in OpenDental)"
        tests:
          - unique
          - not_null
          - positive_values
      
      - name: schedule_date
        description: "Date of the scheduled event (maps to SchedDate in OpenDental)"
        tests:
          - not_null
          - test_date_after:
              compare_column: '2023-01-01'
              allow_null: false
      
      - name: start_time
        description: >
          Start time of the scheduled event (maps to StartTime in OpenDental).
          Currently NULL for all records as times are not used in the current system.
      
      - name: stop_time
        description: >
          End time of the scheduled event (maps to StopTime in OpenDental).
          Currently NULL for all records as times are not used in the current system.
      
      - name: schedule_type
        description: >
          Type of scheduled event (maps to SchedType in OpenDental):
          0 = System-generated records (provider_id = 0, employee_id = 0)
          1 = Provider schedules (employee_id = 0)
          2 = System blockouts (provider_id = 0, employee_id = 0)
          3 = Employee schedules (provider_id = 0)
        tests:
          - not_null
          - accepted_values:
              values: [0, 1, 2, 3]
      
      - name: provider_id
        description: "Foreign key to provider associated with the schedule (maps to ProvNum in OpenDental)"
        tests:
          - relationships:
              to: ref('stg_opendental__provider')
              field: provider_id
              severity: warn
      
      - name: blockout_type_id
        description: >
          Type of blockout when schedule_type = 2 (maps to BlockoutType in OpenDental).
          Common values include:
          - 241: Standard blockout
          - 258: Meeting blockout
          - 617: Lunch blockout
          - 620: Training blockout
          For non-blockout schedules (schedule_type != 2), this value is null.
        tests:
          - not_null:
              where: "schedule_type = 2"  # Only required for blockout schedules
          - accepted_values:
              values: [241, 257, 258, 424, 506, 532, 590, 617, 618, 619, 620, 621, 638]
              where: "schedule_type = 2"  # Only validate values for blockout schedules
      
      - name: note
        description: "Additional notes about the scheduled event (maps to Note in OpenDental)"
      
      - name: status
        description: >
          Current status of the scheduled event (maps to Status in OpenDental):
          - 0 = Unscheduled
          - 1 = Scheduled
          - 2 = Complete
          - 3 = UnSched
          - 4 = ASAP
          - 5 = Planned
          - 6 = WebSched
        tests:
          - not_null
          - accepted_values:
              values: [0, 1, 2, 3, 4, 5, 6]
      
      - name: employee_id
        description: "Foreign key to employee associated with the schedule (maps to EmployeeNum in OpenDental)"
        tests:
          - relationships:
              to: ref('stg_opendental__employee')
              field: employee_id
              severity: warn
      
      - name: clinic_id
        description: "Foreign key to clinic where the event is scheduled (maps to ClinicNum in OpenDental). Not used by MDC clinic."
        # tests:
        #   - relationships:
        #       to: ref('stg_opendental__clinic')
        #       field: clinic_id
        #       severity: warn  # Using warn since clinic model is not yet available
      
      - name: _loaded_at
        description: "Timestamp when the data was loaded into the data warehouse by the ETL pipeline (using current_timestamp)"
        tests:
          - not_null
      
      - name: _created_at
        description: "Timestamp when the record was created in the source system (OpenDental). Maps to DateTStamp."
        tests:
          - not_null
      
      - name: _updated_at
        description: "Timestamp when the record was last updated in the source system (OpenDental). Maps to DateTStamp."
        tests:
          - not_null

    tests:
      - dbt_utils.expression_is_true:
          expression: "provider_id = 0"
          where: "schedule_type IN (0, 2, 3)"
          name: system_provider_check
          severity: error
          config:
            description: "System-generated and employee schedules must have provider_id = 0"
      
      - dbt_utils.expression_is_true:
          expression: "employee_id = 0"
          where: "schedule_type IN (0, 1, 2)"
          name: system_employee_check
          severity: error
          config:
            description: "System-generated and provider schedules must have employee_id = 0"
      
      - dbt_utils.expression_is_true:
          expression: "EXISTS (SELECT 1 FROM {{ ref('stg_opendental__scheduleop') }} so WHERE so.schedule_id = schedule_id)"
          where: "schedule_type IN (1, 2)"
          name: operatory_required_for_schedules
          severity: warn
          config:
            description: "Provider schedules and blockouts should have operatory assignments"
