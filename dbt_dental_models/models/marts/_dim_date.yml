version: 2

models:
  - name: dim_date
    description: >
      Date dimension table providing comprehensive time intelligence and calendar attributes.
      This model serves as the foundation for all time-based analysis in the dental practice,
      supporting both operational and financial reporting needs.
      Part of System A: Core Data Foundation workflow.
      
      Key Features:
      - Time Intelligence: Comprehensive calendar attributes and fiscal period alignment
      - Business Day Calculations: Weekday and holiday-adjusted operational metrics
      - Performance Optimization: Pre-calculated flags for efficient analysis
      - Data Integration: Standard join key for all time-based fact tables
      - Business Categorization: Fiscal periods, business days, and time intelligence flags
      
      Data Sources:
      - PostgreSQL generate_series: Self-contained date generation (2020-2030)
      - US Federal Holiday Calendar: Major holidays for business day calculations
      
      Business Logic Features:
      - Calendar Processing: Standard calendar year, quarter, month, and day attributes
      - Fiscal Period Logic: Fiscal year starts in October (Q1: Oct-Dec)
      - Business Day Logic: Weekdays excluding US federal holidays
      - Time Intelligence: Rolling periods and prior year comparison support
      
      Dimensional Relationships:
      - Primary Key: date_id serves as standard join key for all fact tables
      - Date Arithmetic: date_day supports direct date comparisons and calculations
      - Business Context: Links to appointment, financial, and operational fact tables
      
      Data Quality Notes:
      - Date Range: Comprehensive 11-year coverage (2020-2030) for historical and future analysis
      - Holiday Calendar: Includes all major US federal holidays with accurate date calculations
      - Business Day Logic: Consistent weekday and holiday exclusion for operational metrics
      - Performance Optimization: Pre-calculated flags minimize runtime calculations
      
      Business Rules:
      - Fiscal Year Definition: October through September (Q1: Oct-Dec, Q2: Jan-Mar, Q3: Apr-Jun, Q4: Jul-Sep)
      - Business Day Definition: Monday through Friday excluding federal holidays
      - Time Intelligence: Rolling 12-month and prior year period calculations
      - Holiday Calendar: Comprehensive US federal holiday coverage with accurate date logic
    
    config:
      materialized: table
      schema: marts
      unique_key: date_id
      on_schema_change: fail
      indexes:
        - columns: ['date_id']
          unique: true
        - columns: ['date_day']
        - columns: ['year', 'month']
        - columns: ['fiscal_year', 'fiscal_quarter']
        - columns: ['is_business_day']
      tags: ['dimension', 'daily']

    columns:
      - name: date_id
        description: >
          Primary key for the date dimension, in YYYY-MM-DD format.
          Used as the standard join key for all fact tables and time-based analysis.
        tests:
          - unique
          - not_null

      - name: date_day
        description: >
          The actual date value, in YYYY-MM-DD format.
          Used for direct date comparisons and date arithmetic operations.
        tests:
          - not_null

      - name: year
        description: >
          Calendar year (e.g., 2024).
          Used for year-over-year analysis and annual reporting.
        tests:
          - not_null

      - name: month
        description: >
          Calendar month number (1-12).
          Used for monthly analysis and seasonal patterns.
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      - name: day
        description: >
          Day of month (1-31).
          Used for daily analysis and month-to-date calculations.
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]

      - name: day_of_week
        description: >
          Day of week (0-6, where 0 is Sunday, 6 is Saturday).
          Used for weekly patterns and weekend vs. weekday analysis.
        tests:
          - not_null
          - accepted_values:
              values: [0, 1, 2, 3, 4, 5, 6]

      - name: month_name
        description: >
          Full month name (e.g., 'January', 'February').
          Used for reporting and visualization labels.
        tests:
          - not_null

      - name: day_name
        description: >
          Full day name (e.g., 'Monday', 'Tuesday').
          Used for reporting and visualization labels.
        tests:
          - not_null

      - name: quarter
        description: >
          Calendar quarter (1-4).
          Used for quarterly analysis and reporting.
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4]

      - name: is_weekend
        description: >
          Boolean flag indicating if the date falls on a weekend (Saturday or Sunday).
          Used to filter out weekend days from operational metrics.
        tests:
          - not_null

      - name: is_weekday
        description: >
          Boolean flag indicating if the date falls on a weekday (Monday through Friday).
          Used to focus analysis on business operations.
        tests:
          - not_null

      - name: is_holiday
        description: >
          Boolean flag indicating if the date is a recognized US holiday.
          Used to adjust operational metrics for holiday closures.
        tests:
          - not_null

      - name: is_business_day
        description: >
          Boolean flag indicating if the date is a business day (weekday and not a holiday).
          Primary filter for operational metrics and business day calculations.
        tests:
          - not_null

      - name: business_day_of_month
        description: >
          Sequential number of business days within the month (null for non-business days).
          Used for month-to-date calculations and business day averages.
        tests:
          - not_null:
              where: "is_business_day = true"

      - name: fiscal_year
        description: >
          Fiscal year (October through September).
          Used for financial reporting and budget comparisons.
        tests:
          - not_null

      - name: fiscal_quarter
        description: >
          Fiscal quarter (1-4, where Q1 is Oct-Dec).
          Used for financial reporting and quarterly analysis.
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4]

      - name: is_rolling_12_months
        description: >
          Boolean flag indicating if the date falls within the last 12 months from current date.
          Used for rolling year analysis and trend calculations.
        tests:
          - not_null

      - name: is_same_period_prior_year
        description: >
          Boolean flag indicating if the date falls within the same period last year (12-24 months ago).
          Used for year-over-year comparisons and growth analysis.
        tests:
          - not_null

      - name: is_holiday_adjusted
        description: >
          Boolean flag indicating if the date is either a holiday or weekend.
          Used for holiday-adjusted performance metrics and comparisons.
        tests:
          - not_null

      - name: _loaded_at
        description: >
          ETL pipeline loading timestamp - when the record was loaded into the data warehouse
          
          Source: ETL pipeline metadata (added during loading process)
          Purpose: Data lineage tracking and pipeline monitoring
          Usage: ETL debugging and data freshness validation
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: "'2020-01-01 00:00:00'::timestamp"
              max_value: "current_timestamp"

      - name: _created_at  
        description: >
          Original creation timestamp from date generation process
          
          Source: current_timestamp at model execution
          Represents: When the date record was created in the dimension
          Usage: Business timeline analysis and record lifecycle tracking
        tests:
          - not_null

      - name: _updated_at
        description: >
          Last update timestamp from date generation process
          
          Source: current_timestamp at model execution
          Logic: Static date dimension, updated timestamp reflects model refresh
          Purpose: Change tracking and incremental loading
        tests:
          - not_null

      - name: _transformed_at
        description: >
          dbt model processing timestamp - when this mart model was last run
          
          Source: current_timestamp at dbt model execution
          Purpose: Model execution tracking and debugging
          Usage: Understanding data processing timeline
        tests:
          - not_null

      - name: _mart_refreshed_at
        description: >
          Mart refresh timestamp - when this dimension table was last refreshed
          
          Source: current_timestamp at dbt model execution
          Purpose: Mart refresh tracking and data freshness monitoring
          Usage: Understanding mart update frequency and data currency
        tests:
          - not_null

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - date_id
            - date_day
            - year
            - month
            - day
      
      - dbt_expectations.expression_is_true:
          expression: "fiscal_year >= 2020 and fiscal_year <= 2031"
          config:
            severity: error
            description: >
              Business Rule: Fiscal Year Range Validation
              
              Requirement: Fiscal years must be within expected business range
              Impact: Ensures fiscal reporting alignment with business planning cycles
              Enforcement: Validates fiscal year calculation logic
      
      - dbt_expectations.expression_is_true:
          expression: "fiscal_quarter >= 1 and fiscal_quarter <= 4"
          config:
            severity: error
            description: >
              Business Rule: Fiscal Quarter Validation
              
              Requirement: Fiscal quarters must be valid (1-4)
              Impact: Ensures fiscal period reporting accuracy
              Enforcement: Validates fiscal quarter calculation logic
      
      - dbt_expectations.expression_is_true:
          expression: "is_business_day = (is_weekday and not is_holiday)"
          config:
            severity: error
            description: >
              Business Rule: Business Day Logic Validation
              
              Requirement: Business days must be weekdays that are not holidays
              Impact: Ensures operational metrics use correct business day definition
              Enforcement: Validates business day calculation consistency
      
      - dbt_expectations.expression_is_true:
          expression: "is_holiday_adjusted = (is_holiday or is_weekend)"
          config:
            severity: error
            description: >
              Business Rule: Holiday Adjusted Logic Validation
              
              Requirement: Holiday adjusted days must be either holidays or weekends
              Impact: Ensures holiday-adjusted performance metrics are accurate
              Enforcement: Validates holiday adjustment calculation logic

    meta:
      owner: "data_team"
      contains_pii: false
      contains_phi: false
      business_process: "Time Intelligence and Calendar Management"
      refresh_frequency: "daily"
      business_impact: "High"
      mart_type: "dimension"
      grain_description: "One row per calendar day"
      primary_consumers: ["Finance Team", "Operations Team", "Analytics Team"]
      system_integration: "System A: Core Data Foundation"
      data_quality_requirements:
        - "All date records must be unique and non-null"
        - "Fiscal year and quarter calculations must be accurate"
        - "Business day logic must be consistent with operational requirements"
        - "Holiday calendar must include all relevant federal holidays"
        - "Time intelligence flags must be calculated correctly"
        - "Date range must cover all business reporting periods"
      performance_requirements:
        - "Pre-calculated flags must minimize runtime calculations"
        - "Indexes must support efficient joins to fact tables"
        - "Static nature must allow for materialized table optimization"
        - "Date arithmetic operations must be performant" 